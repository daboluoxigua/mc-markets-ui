{"version":3,"file":"index.cjs","sources":["../packages/components/Icon/Icon.vue","../packages/components/Button/Button.vue","../packages/components/Input/Input.vue","../packages/components/Form/Form.vue","../packages/components/FormItem/FormItem.vue","../packages/utils/classNames.js","../packages/hooks/useClassName.js","../packages/components/Tooltip/Tooltip.vue","../packages/components/Select/Select.vue","../packages/components/Option/Option.vue","../packages/components/OptionGroup/OptionGroup.vue","../packages/components/Pagination/Pagination.vue","../packages/components/Radio/Radio.vue","../packages/components/RadioGroup/RadioGroup.vue","../packages/components/RadioButton/RadioButton.vue","../packages/components/Switch/Switch.vue","../packages/components/Tag/Tag.vue","../packages/components/Alert/Alert.vue","../packages/components/Dialog/Dialog.vue","../packages/components/Notification/Notification.vue","../packages/components/Message/Message.vue","../packages/components/NotifiMessage/NotifiMessage.vue","../packages/components/DatePicker/DatePicker.vue","../packages/components/Empty/Empty.vue","../packages/components/Table/Table.vue","../packages/components/Table/TableColumn.vue","../packages/components/Banner/Banner.vue","../packages/components/Tabs/Tabs.vue","../packages/components/Tabs/TabPane.vue","../packages/utils/styleUtils.js","../packages/index.js"],"sourcesContent":["<template>\r\n  <i \r\n    :class=\"iconClass\" \r\n    :style=\"iconStyle\"\r\n    v-bind=\"$attrs\"\r\n    @click=\"handleClick\"\r\n  >\r\n    <slot></slot>\r\n  </i>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\n\r\n// 定义组件名\r\ndefineOptions({\r\n  name: 'MIcon'\r\n})\r\n\r\nconst props = defineProps({\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  size: {\r\n    type: [String, Number],\r\n    default: '16px'\r\n  },\r\n  color: {\r\n    type: String,\r\n    default: 'inherit'\r\n  },\r\n  spin: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  pulse: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  rotate: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  flip: {\r\n    type: String,\r\n    default: undefined\r\n  },\r\n  prefix: {\r\n    type: String,\r\n    default: 'icon'\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['click'])\r\n\r\n// 计算图标类名\r\nconst iconClass = computed(() => {\r\n  const classes = ['iconfont']\r\n  \r\n  // 添加图标名称类\r\n  if (props.name) {\r\n    classes.push(`${props.prefix}-${props.name}`)\r\n  }\r\n  \r\n  // 添加动画类\r\n  if (props.spin) {\r\n    classes.push('icon-spin')\r\n  }\r\n  if (props.pulse) {\r\n    classes.push('icon-pulse')\r\n  }\r\n  \r\n  // 添加翻转类\r\n  if (props.flip) {\r\n    classes.push(`icon-flip-${props.flip}`)\r\n  }\r\n  \r\n  return classes\r\n})\r\n\r\n// 计算图标样式\r\nconst iconStyle = computed(() => {\r\n  const style = {}\r\n  \r\n  // 设置大小\r\n  if (props.size) {\r\n    if (typeof props.size === 'number') {\r\n      style.fontSize = `${props.size}px`\r\n    } else {\r\n      style.fontSize = props.size\r\n    }\r\n  }\r\n  \r\n  // 设置颜色\r\n  if (props.color) {\r\n    style.color = props.color\r\n  }\r\n  \r\n  // 设置旋转\r\n  if (props.rotate !== 0) {\r\n    style.transform = `rotate(${props.rotate}deg)`\r\n  }\r\n  \r\n  return style\r\n})\r\n\r\n// 点击事件处理\r\nconst handleClick = (event) => {\r\n  emit('click', event)\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.iconfont {\r\n  display: inline-block;\r\n  font-style: normal;\r\n  vertical-align: baseline;\r\n  text-align: center;\r\n  text-transform: none;\r\n  line-height: 1;\r\n  text-rendering: optimizeLegibility;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n/* 旋转动画 */\r\n.icon-spin {\r\n  animation: icon-spin 1s linear infinite;\r\n}\r\n\r\n@keyframes icon-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* 脉冲动画 */\r\n.icon-pulse {\r\n  animation: icon-pulse 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes icon-pulse {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n/* 翻转效果 */\r\n.icon-flip-horizontal {\r\n  transform: scaleX(-1);\r\n}\r\n\r\n.icon-flip-vertical {\r\n  transform: scaleY(-1);\r\n}\r\n\r\n.icon-flip-both {\r\n  transform: scale(-1);\r\n}\r\n\r\n/* 当有旋转时，需要与翻转效果结合 */\r\n.icon-spin.icon-flip-horizontal {\r\n  animation: icon-spin-flip-horizontal 1s linear infinite;\r\n}\r\n\r\n.icon-spin.icon-flip-vertical {\r\n  animation: icon-spin-flip-vertical 1s linear infinite;\r\n}\r\n\r\n.icon-spin.icon-flip-both {\r\n  animation: icon-spin-flip-both 1s linear infinite;\r\n}\r\n\r\n@keyframes icon-spin-flip-horizontal {\r\n  from {\r\n    transform: rotate(0deg) scaleX(-1);\r\n  }\r\n  to {\r\n    transform: rotate(360deg) scaleX(-1);\r\n  }\r\n}\r\n\r\n@keyframes icon-spin-flip-vertical {\r\n  from {\r\n    transform: rotate(0deg) scaleY(-1);\r\n  }\r\n  to {\r\n    transform: rotate(360deg) scaleY(-1);\r\n  }\r\n}\r\n\r\n@keyframes icon-spin-flip-both {\r\n  from {\r\n    transform: rotate(0deg) scale(-1);\r\n  }\r\n  to {\r\n    transform: rotate(360deg) scale(-1);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-button v-bind=\"$attrs\" class=\"m-button\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-button>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MButton'\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// Button 组件样式 - 使用高优先级选择器确保不被全局样式覆盖\r\n\r\n</style>","<template>\r\n  <el-input v-bind=\"$attrs\" class=\"m-input\" :class=\"{ solid: $attrs.styleType === 'solid' }\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-input>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MInput'\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n</style>","<template>\r\n  <el-form ref=\"formRef\" v-bind=\"$attrs\" class=\"m-form\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, useAttrs, defineExpose } from 'vue'\r\n\r\ndefineOptions({\r\n  name: 'MForm'\r\n})\r\n\r\nconst formRef = ref()\r\nconst attrs = useAttrs()\r\n\r\n// 暴露表单方法\r\ndefineExpose({\r\n  validate: (callback) => formRef.value?.validate(callback),\r\n  validateField: (props, callback) => formRef.value?.validateField(props, callback),\r\n  resetFields: () => formRef.value?.resetFields(),\r\n  scrollToField: (prop) => formRef.value?.scrollToField(prop),\r\n  clearValidate: (props) => formRef.value?.clearValidate(props)\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","<template>\r\n  <el-form-item v-bind=\"$attrs\" class=\"m-form-item\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-form-item>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MFormItem'\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// FormItem 组件样式 - 使用 m-form-item 类名隔离样式\r\n.m-form-item {\r\n  // 自定义样式可以在这里添加\r\n}\r\n</style>","/**\r\n * 类名装饰器方法\r\n * @param {...(string|boolean|undefined|null)} classes - 类名参数\r\n * @returns {string} 合并后的类名字符串\r\n */\r\nexport const classNames = (...classes) => {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\n/**\r\n * 排除指定属性\r\n * @param {Object} attrs - 原始属性对象\r\n * @param {...string} excludeKeys - 要排除的属性名\r\n * @returns {Object} 排除指定属性后的新对象\r\n */\r\nexport const excludeAttrs = (attrs, ...excludeKeys) => {\r\n  const result = { ...attrs }\r\n  excludeKeys.forEach(key => {\r\n    delete result[key]\r\n  })\r\n  return result\r\n}\r\n\r\n","import { computed, useAttrs } from 'vue'\r\nimport { classNames, excludeAttrs } from '@packages/utils/classNames.js'\r\n\r\n/**\r\n * 类名 Hook\r\n * @param {string} defaultClass - 默认的类名\r\n * @param {string} excludeKey - 要排除的属性名，默认为 'popperClass'\r\n * @returns {Object} 包含 mergedAttrs 和 className 的对象\r\n */\r\nexport function useClassName(defaultClass, excludeKey = 'popperClass') {\r\n  const attrs = useAttrs()\r\n  \r\n  // 排除指定属性\r\n  const mergedAttrs = computed(() => excludeAttrs(attrs, excludeKey))\r\n  \r\n  // 计算类名\r\n  const className = computed(() => classNames(defaultClass, attrs[excludeKey]))\r\n  \r\n  return {\r\n    mergedAttrs,\r\n    className\r\n  }\r\n}\r\n","<template>\r\n  <el-tooltip v-bind=\"mergedAttrs\" :popper-class=\"popperClass\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-tooltip>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\"\r\n\r\ndefineOptions({\r\n  name: 'MTooltip'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } = useClassName('mc-tooltip-popper')\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.mc-tooltip-popper {\r\n  &.is-dark {\r\n    color: #fff !important;\r\n    background-color: var(--all-gray-6) !important;\r\n    border-color: var(--all-gray-6) !important;\r\n    .el-popper__arrow::before{\r\n        background-color: var(--all-gray-6) !important;\r\n        border-color: var(--all-gray-6) !important;\r\n    }\r\n  }\r\n  \r\n  &.is-light {\r\n    color: #606266 !important;\r\n    background-color: #fff !important;\r\n    border: 1px solid #e4e7ed !important;\r\n    \r\n    .el-popper__arrow::before {\r\n      background-color: #fff !important;\r\n      border-color: #fff !important;\r\n    }\r\n  }\r\n}\r\n\r\n:deep(.el-popper) {\r\n  &.is-light {\r\n    background: var(--bg-tertiary-hover);\r\n    border-color: var(--border-primary);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-select\r\n    class=\"m-select\"\r\n    :class=\"{ solid: $attrs.styleType === 'solid' }\"\r\n    :show-arrow=\"false\"\r\n    v-bind=\"$attrs\"\r\n  >\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-select>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: \"MSelect\",\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n","<template>\r\n  <el-option v-bind=\"$attrs\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-option>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MOption'\r\n})\r\n</script>\r\n","<template>\r\n  <el-option-group v-bind=\"$attrs\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-option-group>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MOptionGroup'\r\n})\r\n</script>\r\n","<template>\r\n  <el-pagination v-bind=\"$attrs\" class=\"m-pagination\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-pagination>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: \"MPagination\",\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.m-pagination {\r\n  --el-border-color-hover: var(--border-tertiary) !important;\r\n  --el-pagination-button-bg-color: var(--bg-tertiary-hover) !important;\r\n  &.is-background .el-pager li.is-active {\r\n    color: var(--text-quaternary) !important;\r\n  }\r\n  .el-pager li{\r\n    border-radius: var(--xs);\r\n    border: 1px solid transparent;\r\n    &:hover {\r\n      border: 1px solid var(--border-tertiary);\r\n      color: var(--text-primary);\r\n    }\r\n  }\r\n  .el-select .el-select__wrapper {\r\n    width: 112px;\r\n    min-height: 32px;\r\n    padding: 5px 8px;\r\n    border-radius: var(--xs);\r\n    background-color: var(--bg-tertiary-hover);\r\n  }\r\n  .el-input .el-input__wrapper {\r\n    height: 30px;\r\n    border-radius: var(--xs);\r\n    background-color: var(--bg-tertiary-hover);\r\n  }\r\n  .el-pagination.is-background {\r\n    background-color: var(--bg-tertiary-hover);\r\n  }\r\n  .el-pager .number {\r\n    font-size: var(--font-size-text-sm);\r\n    font-weight: 500;\r\n  }\r\n  .btn-prev,\r\n  .btn-next {\r\n    &:disabled {\r\n      background-color: transparent !important;\r\n    }\r\n    &:hover:not(:disabled) {\r\n      border: 1px solid var(--border-tertiary);\r\n      color: var(--text-primary);\r\n    }\r\n    background-color: transparent !important;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-radio v-bind=\"mergedAttrs\" class=\"m-radio\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-radio>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\"\r\n\r\ndefineOptions({\r\n  name: 'MRadio'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } = useClassName('mc-radio-popper')\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// Radio popper-class 样式\r\n// .mc-radio-popper {\r\n//   自定义单选框样式可以在这里添加\r\n// }\r\n.m-radio{\r\n  &.el-radio{\r\n    --el-radio-input-height: 16px;\r\n    --el-radio-input-width: 16px;\r\n    --el-radio-input-border: 2px solid var(--icon-tertiary);\r\n    &.el-radio--large{\r\n      --el-radio-input-height: 20px;\r\n      --el-radio-input-width: 20px;\r\n      .el-radio__inner{\r\n        height: var(--el-radio-input-height);\r\n        width: var(--el-radio-input-width);\r\n      }\r\n    }\r\n\r\n    .el-radio__input {\r\n      &.is-checked .el-radio__inner::after {\r\n        height: 6px;\r\n        width: 6px;\r\n        background-color: var(--bg-primary);\r\n      }\r\n      \r\n      &.is-disabled {\r\n        .el-radio__inner {\r\n          background-color: var(--all-alphe-white-20);\r\n          border-color: var(--icon-tertiary);\r\n        }\r\n        \r\n        &.is-checked .el-radio__inner::after {\r\n          background-color: var(--all-alphe-white-20);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-radio-group v-bind=\"mergedAttrs\" :popper-class=\"computedPopperClass\" class=\"m-radio-group\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-radio-group>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, useAttrs } from 'vue'\r\n\r\ndefineOptions({\r\n  name: 'MRadioGroup'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 获取attrs\r\nconst attrs = useAttrs()\r\n\r\n// 计算popper-class，合并默认类名和外部传入的类名\r\nconst computedPopperClass = computed(() => {\r\n  const defaultPopperClass = 'mc-radio-group-popper'\r\n  \r\n  if (attrs.popperClass) {\r\n    return `${defaultPopperClass} ${attrs.popperClass}`.trim()\r\n  }\r\n  \r\n  return defaultPopperClass\r\n})\r\n\r\n// 合并其他属性（排除popperClass）\r\nconst mergedAttrs = computed(() => {\r\n  const { popperClass, ...otherAttrs } = attrs\r\n  return otherAttrs\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// RadioGroup popper-class 样式\r\n.mc-radio-group-popper {\r\n  // 自定义单选框组样式可以在这里添加\r\n}\r\n\r\n// 自定义主题示例\r\n.mc-radio-group-custom {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background: linear-gradient(45deg, #667eea, #764ba2);\r\n        border-color: #667eea;\r\n        \r\n        &:hover {\r\n          background: linear-gradient(45deg, #5a6fd8, #6a4190);\r\n          border-color: #5a6fd8;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background: linear-gradient(45deg, #4c63d2, #5d3a7e);\r\n        border-color: #4c63d2;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #667eea;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n\r\n.mc-radio-group-success {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background-color: #67c23a;\r\n        border-color: #67c23a;\r\n        \r\n        &:hover {\r\n          background-color: #5daf34;\r\n          border-color: #5daf34;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background-color: #529b2e;\r\n        border-color: #529b2e;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #67c23a;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n\r\n.mc-radio-group-warning {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background-color: #e6a23c;\r\n        border-color: #e6a23c;\r\n        \r\n        &:hover {\r\n          background-color: #d4922b;\r\n          border-color: #d4922b;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background-color: #c8951f;\r\n        border-color: #c8951f;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #e6a23c;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n\r\n.mc-radio-group-danger {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background-color: #f56c6c;\r\n        border-color: #f56c6c;\r\n        \r\n        &:hover {\r\n          background-color: #f45454;\r\n          border-color: #f45454;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background-color: #f24545;\r\n        border-color: #f24545;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #f56c6c;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-radio-button v-bind=\"mergedAttrs\" class=\"m-radio-button\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-radio-button>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\"\r\n\r\ndefineOptions({\r\n  name: 'MRadioButton'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } = useClassName('mc-radio-button-popper')\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// RadioButton popper-class 样式\r\n// .mc-radio-button-popper {\r\n//   自定义单选框按钮样式可以在这里添加\r\n// }\r\n\r\n// 自定义主题示例\r\n.mc-radio-button-custom {\r\n  .el-radio-button__inner {\r\n    background: linear-gradient(45deg, #667eea, #764ba2);\r\n    border-color: #667eea;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background: linear-gradient(45deg, #5a6fd8, #6a4190);\r\n      border-color: #5a6fd8;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background: linear-gradient(45deg, #4c63d2, #5d3a7e);\r\n    border-color: #4c63d2;\r\n    box-shadow: -1px 0 0 0 #4c63d2;\r\n  }\r\n}\r\n\r\n.mc-radio-button-success {\r\n  .el-radio-button__inner {\r\n    background-color: #67c23a;\r\n    border-color: #67c23a;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background-color: #5daf34;\r\n      border-color: #5daf34;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background-color: #529b2e;\r\n    border-color: #529b2e;\r\n    box-shadow: -1px 0 0 0 #529b2e;\r\n  }\r\n}\r\n\r\n.mc-radio-button-warning {\r\n  .el-radio-button__inner {\r\n    background-color: #e6a23c;\r\n    border-color: #e6a23c;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background-color: #d4922b;\r\n      border-color: #d4922b;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background-color: #c8951f;\r\n    border-color: #c8951f;\r\n    box-shadow: -1px 0 0 0 #c8951f;\r\n  }\r\n}\r\n\r\n.mc-radio-button-danger {\r\n  .el-radio-button__inner {\r\n    background-color: #f56c6c;\r\n    border-color: #f56c6c;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background-color: #f45454;\r\n      border-color: #f45454;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background-color: #f24545;\r\n    border-color: #f24545;\r\n    box-shadow: -1px 0 0 0 #f24545;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-switch v-bind=\"mergedAttrs\" :popper-class=\"popperClass\" class=\"m-switch\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-switch>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\";\r\n\r\ndefineOptions({\r\n  name: \"MSwitch\",\r\n});\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n});\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } =\r\n  useClassName(\"mc-switch-popper\");\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.m-switch {\r\n  &.is-checked {\r\n    .el-switch__action {\r\n      background-color: var(--all-gray-10);\r\n    }\r\n  }\r\n  \r\n  &:not(.is-checked) {\r\n    .el-switch__core {\r\n      background-color: var(--all-gray-5);\r\n      border-color: var(--all-gray-5);\r\n      .el-switch__action {\r\n        background-color: var(--all-gray-1);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-tag v-bind=\"$attrs\" class=\"m-tag\" :class=\"{ 'is-loading': loading }\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <!-- 自定义spinner loading效果 -->\r\n      <div v-if=\"loading && !prefixIcon\" class=\"custom-spinner\">\r\n        <div class=\"ldio-spinner\">\r\n          <div v-for=\"i in 8\" :key=\"i\"></div>\r\n        </div>\r\n      </div>\r\n      <!-- 原有的prefixIcon -->\r\n      <i \r\n        class=\"prefixIcon\" \r\n        :class=\"['iconfont', computedPrefixIcon]\" \r\n        v-else-if=\"computedPrefixIcon\"\r\n      ></i>\r\n      <div>\r\n        <slot :name=\"name\" />\r\n      </div>\r\n      <i \r\n        class=\"suffixIcon\" \r\n        :class=\"['iconfont', suffixIcon]\" \r\n        v-if=\"suffixIcon\"\r\n      ></i>\r\n    </template>\r\n  </el-tag>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\n\r\ndefineOptions({\r\n  name: 'MTag'\r\n})\r\n\r\nconst props = defineProps({\r\n  prefixIcon: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  suffixIcon: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  loading: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// 计算属性：处理prefixIcon\r\nconst computedPrefixIcon = computed(() => {\r\n  return props.prefixIcon\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.m-tag {\r\n  .prefixIcon,\r\n  .suffixIcon {\r\n    font-size: 16px;\r\n    display: inline-block;\r\n    line-height: 1;\r\n    \r\n    &.iconfont {\r\n      font-family: \"iconfont\" !important;\r\n    }\r\n    \r\n    &.colorfont {\r\n      font-family: \"colorfont\" !important;\r\n    }\r\n  }\r\n  .el-tag__content{\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .prefixIcon {\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  .suffixIcon {\r\n    margin-left: 4px;\r\n  }\r\n  \r\n  // 自定义spinner样式\r\n  .custom-spinner {\r\n    display: inline-block;\r\n    margin-right: 4px;\r\n    width: 16px;\r\n    height: 16px;\r\n    overflow: hidden;\r\n    \r\n    .ldio-spinner {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: relative;\r\n      transform: translateZ(0) scale(0.16);\r\n      backface-visibility: hidden;\r\n      transform-origin: 0 0;\r\n      \r\n      div {\r\n        left: 46px;\r\n        top: 7.5px;\r\n        position: absolute;\r\n        animation: ldio-spinner-fade linear 1s infinite;\r\n        background: currentColor;\r\n        width: 8px;\r\n        height: 21px;\r\n        border-radius: 3.15px / 3.15px;\r\n        transform-origin: 4px 42.5px;\r\n        box-sizing: content-box;\r\n      }\r\n      \r\n      div:nth-child(1) {\r\n        transform: rotate(0deg);\r\n        animation-delay: -0.875s;\r\n      }\r\n      \r\n      div:nth-child(2) {\r\n        transform: rotate(45deg);\r\n        animation-delay: -0.75s;\r\n      }\r\n      \r\n      div:nth-child(3) {\r\n        transform: rotate(90deg);\r\n        animation-delay: -0.625s;\r\n      }\r\n      \r\n      div:nth-child(4) {\r\n        transform: rotate(135deg);\r\n        animation-delay: -0.5s;\r\n      }\r\n      \r\n      div:nth-child(5) {\r\n        transform: rotate(180deg);\r\n        animation-delay: -0.375s;\r\n      }\r\n      \r\n      div:nth-child(6) {\r\n        transform: rotate(225deg);\r\n        animation-delay: -0.25s;\r\n      }\r\n      \r\n      div:nth-child(7) {\r\n        transform: rotate(270deg);\r\n        animation-delay: -0.125s;\r\n      }\r\n      \r\n      div:nth-child(8) {\r\n        transform: rotate(315deg);\r\n        animation-delay: 0s;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes ldio-spinner-fade {\r\n  0% { \r\n    opacity: 1; \r\n  }\r\n  100% { \r\n    opacity: 0; \r\n  }\r\n}\r\n</style>","<template>\r\n  <el-alert v-bind=\"mergedAttrs\" class=\"mc-alert\">\r\n    <!-- 自定义图标插槽 -->\r\n    <template v-if=\"iconUrl\" #icon>\r\n      <img :src=\"iconUrl\" :alt=\"`${type} icon`\" class=\"mc-alert-icon\" />\r\n    </template>\r\n    \r\n    <!-- 其他插槽 -->\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-alert>\r\n</template>\r\n\r\n<script>\r\n// 定义可选的Alert类型\r\nconst availableTypes = ['success', 'warning', 'error']\r\n\r\nexport default {\r\n  name: 'MAlert'\r\n}\r\n</script>\r\n\r\n<script setup>\r\nimport { computed, useAttrs } from 'vue'\r\n\r\nconst props = defineProps({\r\n  type: {\r\n    type: String,\r\n    default: 'success',\r\n    validator: (value) => availableTypes.includes(value)\r\n  },\r\n  useCustomIcon: {\r\n    type: Boolean,\r\n    default: true\r\n  }\r\n})\r\n\r\nconst attrs = useAttrs()\r\n\r\n// 排除已处理的属性，确保 type 属性正确传递\r\nconst mergedAttrs = computed(() => {\r\n  const { useCustomIcon, ...rest } = attrs\r\n  return {\r\n    ...rest,\r\n    type: props.type  // 确保 type 属性正确传递给 el-alert\r\n  }\r\n})\r\n\r\n// 计算图标URL\r\nconst iconUrl = computed(() => {\r\n  if (!props.useCustomIcon) {\r\n    return null\r\n  }\r\n  \r\n  return `https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-${props.type}.png`\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.mc-alert.el-alert {\r\n  --el-alert-padding: 14px 16px;\r\n  .mc-alert-icon {\r\n    width: 16px;\r\n    height: 16px;\r\n    object-fit: contain;\r\n  }\r\n  .el-alert__close-btn{\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    opacity: 0.6;\r\n    transition: opacity 0.2s ease;\r\n    border-radius: 50%;\r\n    width: 20px;\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    &:hover {\r\n      opacity: 1;\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n  // Error 类型样式\r\n  &.el-alert--error.is-light {\r\n    background-color: var(--all-red-10);\r\n    color: var(--text-error-primary);\r\n    border-color: var(--all-red-10);\r\n    \r\n    .el-alert__title,\r\n    .el-alert__description,\r\n    .el-alert__close-btn {\r\n      color: var(--text-error-primary);\r\n    }\r\n  \r\n    .el-alert__icon {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n  \r\n  // Warning 类型样式\r\n  &.el-alert--warning.is-light {\r\n    background-color: var(--all-orange-10);\r\n    color: var(--text-warning-primary);\r\n    border-color: var(--all-orange-10);\r\n    \r\n    .el-alert__title,\r\n    .el-alert__description,\r\n    .el-alert__close-btn {\r\n      color: var(--text-warning-primary);\r\n    }\r\n  \r\n    .el-alert__icon {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n  \r\n  // Success 类型样式\r\n  &.el-alert--success.is-light {\r\n    background-color: var(--all-green-10);\r\n    color: var(--all-green-4);\r\n    border-color: var(--all-green-10);\r\n    \r\n    .el-alert__title,\r\n    .el-alert__description,\r\n    .el-alert__close-btn {\r\n      color: var(--all-green-4);\r\n    }\r\n  \r\n    .el-alert__icon {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n}\r\n\r\n</style>","<template>\r\n  <div>\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :width=\"width\"\r\n      :title=\"title\"\r\n      :draggable=\"draggable\"\r\n      :close-on-click-modal=\"closeOnClickModal\"\r\n      :center=\"center\"\r\n      v-bind=\"$attrs\"\r\n      class=\"m-dialog\"\r\n      header-class=\"m-header\"\r\n    >\r\n      <template v-if=\"$slots.header\" #header=\"{ close, titleId, titleClass }\">\r\n        <slot name=\"header\" v-bind=\"{ close, titleId, titleClass }\"></slot>\r\n      </template>\r\n      <slot name=\"default\"></slot>\r\n      <template v-if=\"$slots.footer\" #footer class=\"m-footer\">\r\n        <slot name=\"footer\"></slot>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MDialog'\r\n})\r\nconst props = defineProps({\r\n  width: {\r\n    type: String,\r\n    default: '440px'\r\n  },\r\n  center: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  draggable: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  closeOnClickModal: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  title: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\nconst emit = defineEmits(['close'])\r\nconst dialogVisible = defineModel('modelValue', {\r\n  type: Boolean,\r\n  default: false\r\n})\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n</style>\r\n","<template>\r\n  <el-notification v-bind=\"$attrs\" class=\"mc-notification\">\r\n    <!-- 其他插槽 -->\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-notification>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MNotification\",\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// Notification 基础样式\r\n// 如需自定义样式，可以在这里添加\r\n</style>\r\n","<template>\r\n  <teleport to=\"body\">\r\n    <transition-group name=\"message\" tag=\"div\" class=\"message-container\">\r\n      <div\r\n        v-for=\"message in messages\"\r\n        :key=\"message.id\"\r\n        :class=\"[\r\n          'custom-message',\r\n          `message-${message.type}`,\r\n          `message-${message.placement}`,\r\n          { 'message-plain': message.plain }\r\n        ]\"\r\n      >\r\n        <!-- 图标 -->\r\n        <div v-if=\"message.showIcon\" class=\"message-icon\">\r\n          <img \r\n            v-if=\"message.customIcon\"\r\n            :src=\"message.customIcon\"\r\n            alt=\"custom icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n          <img \r\n            v-else-if=\"message.type === 'success'\"\r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-success.png\"\r\n            alt=\"success icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n          <img \r\n            v-else-if=\"message.type === 'warning'\"\r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-warning.png\"\r\n            alt=\"warning icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n          <img \r\n            v-else-if=\"message.type === 'error'\"\r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-error.png\"\r\n            alt=\"error icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 消息内容 -->\r\n        <div class=\"message-content\">\r\n          <component \r\n            v-if=\"typeof message.message === 'function'\"\r\n            :is=\"message.message\"\r\n          />\r\n          <div \r\n            v-else-if=\"message.dangerouslyUseHTMLString\"\r\n            v-html=\"message.message\"\r\n          />\r\n          <span v-else>{{ message.message }}</span>\r\n          \r\n          <!-- 重复数量 -->\r\n          <span v-if=\"message.repeatNum > 1\" class=\"message-repeat\">\r\n            {{ message.repeatNum }}\r\n          </span>\r\n        </div>\r\n\r\n        <!-- 关闭按钮 -->\r\n        <button \r\n          v-if=\"message.showClose\"\r\n          class=\"message-close\"\r\n          @click=\"closeMessage(message.id)\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n    </transition-group>\r\n  </teleport>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\n\r\n// 全局消息列表\r\nconst messages = ref([])\r\nlet messageId = 0\r\n\r\n// 创建 Message 静态方法对象\r\nconst Message = {\r\n  // 默认配置\r\n  defaultOptions: {\r\n    message: '',\r\n    type: 'success',\r\n    plain: false,\r\n    customIcon: '',\r\n    dangerouslyUseHTMLString: false,\r\n    customClass: '',\r\n    duration: 3000,\r\n    showClose: false,\r\n    showIcon: true,\r\n    onClose: null,\r\n    offset: 16,\r\n    placement: 'top',\r\n    appendTo: 'body',\r\n    grouping: false,\r\n    repeatNum: 1\r\n  },\r\n\r\n  // 显示消息\r\n  show(options = {}) {\r\n    // 如果是字符串，转换为配置对象\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n\r\n    const config = {\r\n      ...this.defaultOptions,\r\n      ...options,\r\n      id: ++messageId\r\n    }\r\n\r\n    // 分组处理\r\n    if (config.grouping) {\r\n      const existingIndex = messages.value.findIndex(\r\n        m => m.message === config.message && m.type === config.type && m.grouping\r\n      )\r\n      \r\n      if (existingIndex > -1) {\r\n        messages.value[existingIndex].repeatNum++\r\n        return { close: () => this.close(messages.value[existingIndex].id) }\r\n      }\r\n    }\r\n\r\n    // 添加到消息列表\r\n    messages.value.push(config)\r\n\r\n    // 如果设置了自动关闭时间，则自动关闭\r\n    if (config.duration > 0) {\r\n      setTimeout(() => {\r\n        this.close(config.id)\r\n      }, config.duration)\r\n    }\r\n\r\n    return {\r\n      close: () => this.close(config.id)\r\n    }\r\n  },\r\n\r\n  // 关闭指定消息\r\n  close(id) {\r\n    const index = messages.value.findIndex(m => m.id === id)\r\n    if (index > -1) {\r\n      const message = messages.value[index]\r\n      if (message.onClose) {\r\n        message.onClose(message)\r\n      }\r\n      messages.value.splice(index, 1)\r\n    }\r\n  },\r\n\r\n  // 关闭所有消息\r\n  closeAll() {\r\n    messages.value = []\r\n  },\r\n\r\n  // 便捷方法\r\n  success(options = {}) {\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n    return this.show({ ...options, type: 'success' })\r\n  },\r\n\r\n  warning(options = {}) {\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n    return this.show({ ...options, type: 'warning' })\r\n  },\r\n\r\n  error(options = {}) {\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n    return this.show({ ...options, type: 'error' })\r\n  }\r\n}\r\n\r\n// 关闭消息的方法\r\nconst closeMessage = (id) => {\r\n  Message.close(id)\r\n}\r\n\r\n// Vue 组件定义\r\nexport default {\r\n  name: 'MMessage',\r\n  setup() {\r\n    return {\r\n      messages,\r\n      closeMessage\r\n    }\r\n  }\r\n}\r\n\r\n// 导出类供直接使用\r\nexport { Message }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.message-container {\r\n  position: fixed;\r\n  z-index: 9999;\r\n  pointer-events: none;\r\n}\r\n\r\n.custom-message {\r\n  position: fixed;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  min-width: 200px;\r\n  max-width: 320px;\r\n  padding: 12px 16px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  pointer-events: auto;\r\n  z-index: 9999;\r\n  font-size: 14px;\r\n  \r\n  // 位置控制\r\n  &.message-top {\r\n    top: 20px;\r\n    \r\n    &:nth-child(2) { top: 70px; }\r\n    &:nth-child(3) { top: 120px; }\r\n    &:nth-child(4) { top: 170px; }\r\n    &:nth-child(5) { top: 220px; }\r\n  }\r\n  \r\n  &.message-top-left {\r\n    top: 20px;\r\n    left: 20px;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { top: 70px; }\r\n    &:nth-child(3) { top: 120px; }\r\n    &:nth-child(4) { top: 170px; }\r\n    &:nth-child(5) { top: 220px; }\r\n  }\r\n  \r\n  &.message-top-right {\r\n    top: 20px;\r\n    right: 20px;\r\n    left: auto;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { top: 70px; }\r\n    &:nth-child(3) { top: 120px; }\r\n    &:nth-child(4) { top: 170px; }\r\n    &:nth-child(5) { top: 220px; }\r\n  }\r\n  \r\n  &.message-bottom {\r\n    bottom: 20px;\r\n    top: auto;\r\n    \r\n    &:nth-child(2) { bottom: 70px; }\r\n    &:nth-child(3) { bottom: 120px; }\r\n    &:nth-child(4) { bottom: 170px; }\r\n    &:nth-child(5) { bottom: 220px; }\r\n  }\r\n  \r\n  &.message-bottom-left {\r\n    bottom: 20px;\r\n    left: 20px;\r\n    top: auto;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { bottom: 70px; }\r\n    &:nth-child(3) { bottom: 120px; }\r\n    &:nth-child(4) { bottom: 170px; }\r\n    &:nth-child(5) { bottom: 220px; }\r\n  }\r\n  \r\n  &.message-bottom-right {\r\n    bottom: 20px;\r\n    right: 20px;\r\n    left: auto;\r\n    top: auto;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { bottom: 70px; }\r\n    &:nth-child(3) { bottom: 120px; }\r\n    &:nth-child(4) { bottom: 170px; }\r\n    &:nth-child(5) { bottom: 220px; }\r\n  }\r\n  \r\n  .message-icon {\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    .message-icon-img {\r\n      width: 16px;\r\n      height: 16px;\r\n      object-fit: contain;\r\n    }\r\n  }\r\n  \r\n  .message-content {\r\n    flex: 1;\r\n    line-height: 1.4;\r\n    position: relative;\r\n    \r\n    .message-repeat {\r\n      position: absolute;\r\n      top: -8px;\r\n      right: -8px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background: #666;\r\n      color: white;\r\n      font-size: 10px;\r\n      font-weight: bold;\r\n      min-width: 16px;\r\n      height: 16px;\r\n      padding: 0 4px;\r\n      border-radius: 8px;\r\n      border: 2px solid white;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    }\r\n  }\r\n  \r\n  .message-close {\r\n    flex-shrink: 0;\r\n    border: none;\r\n    background: transparent;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 4px;\r\n    margin-left: 8px;\r\n    opacity: 0.6;\r\n    transition: opacity 0.2s ease;\r\n    font-size: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    color: var(--icon-tertiary, #999);\r\n    \r\n    &:hover {\r\n      opacity: 1;\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n  \r\n  // 不同类型的样式 - 统一使用 bg-tertiary-hover 背景\r\n  &.message-success {\r\n    background-color: var(--bg-tertiary-hover, #f5f5f5);\r\n    color: var(--all-green-4, #67c23a);\r\n    border: 1px solid var(--bg-tertiary-hover, #f5f5f5);\r\n    \r\n    .message-icon {\r\n      color: var(--all-green-4, #67c23a);\r\n    }\r\n    \r\n    .message-repeat {\r\n      background: var(--all-green-4, #67c23a);\r\n      border-color: var(--all-green-4, #67c23a);\r\n    }\r\n    \r\n    &.message-plain {\r\n      background: var(--all-green-4, #67c23a);\r\n      border: 1px solid var(--all-green-4, #67c23a);\r\n      color: #fff;\r\n      \r\n      .message-icon {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  \r\n  &.message-warning {\r\n    background-color: var(--bg-tertiary-hover, #f5f5f5);\r\n    color: var(--text-warning-primary, #e6a23c);\r\n    border: 1px solid var(--bg-tertiary-hover, #f5f5f5);\r\n    \r\n    .message-icon {\r\n      color: var(--text-warning-primary, #e6a23c);\r\n    }\r\n    \r\n    .message-repeat {\r\n      background: var(--text-warning-primary, #e6a23c);\r\n      border-color: var(--text-warning-primary, #e6a23c);\r\n    }\r\n    \r\n    &.message-plain {\r\n      background: var(--text-warning-primary, #e6a23c);\r\n      border: 1px solid var(--text-warning-primary, #e6a23c);\r\n      color: #fff;\r\n      \r\n      .message-icon {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  \r\n  &.message-error {\r\n    background-color: var(--bg-tertiary-hover, #f5f5f5);\r\n    color: var(--text-error-primary, #f56c6c);\r\n    border: 1px solid var(--bg-tertiary-hover, #f5f5f5);\r\n    \r\n    .message-icon {\r\n      color: var(--text-error-primary, #f56c6c);\r\n    }\r\n    \r\n    .message-repeat {\r\n      background: var(--text-error-primary, #f56c6c);\r\n      border-color: var(--text-error-primary, #f56c6c);\r\n    }\r\n    \r\n    &.message-plain {\r\n      background: var(--text-error-primary, #f56c6c);\r\n      border: 1px solid var(--text-error-primary, #f56c6c);\r\n      color: #fff;\r\n      \r\n      .message-icon {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 动画效果\r\n.message-enter-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.message-leave-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.message-enter-from {\r\n  opacity: 0;\r\n  transform: translateX(-50%) translateY(-20px);\r\n}\r\n\r\n.message-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(-50%) translateY(-20px);\r\n}\r\n\r\n.message-move {\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n// 不同位置的动画\r\n.message-top-left {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(-20px);\r\n  }\r\n}\r\n\r\n.message-top-right {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(20px);\r\n  }\r\n}\r\n\r\n.message-bottom {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(-50%) translateY(20px);\r\n  }\r\n}\r\n\r\n.message-bottom-left {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(-20px);\r\n  }\r\n}\r\n\r\n.message-bottom-right {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(20px);\r\n  }\r\n}\r\n\r\n// 响应式设计\r\n@media (max-width: 480px) {\r\n  .custom-message {\r\n    min-width: calc(100vw - 40px);\r\n    max-width: calc(100vw - 40px);\r\n    left: 20px !important;\r\n    right: 20px !important;\r\n    transform: none !important;\r\n    \r\n    &.message-enter-from,\r\n    &.message-leave-to {\r\n      transform: translateY(-20px) !important;\r\n    }\r\n  }\r\n}\r\n</style>","<template>\r\n  <teleport to=\"body\">\r\n    <transition-group name=\"notification\" tag=\"div\" class=\"notification-container\">\r\n      <div\r\n        v-for=\"notification in notifications\"\r\n        :key=\"notification.id\"\r\n        :class=\"[\r\n          'custom-notification',\r\n          `notification-${notification.position}`\r\n        ]\"\r\n      >\r\n        <!-- 图标 -->\r\n        <div class=\"notification-icon\">\r\n          <img \r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/MCImages/userCenter/icon-quota-tip.png\" \r\n            alt=\"notification icon\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 内容区域 -->\r\n        <div class=\"notification-content\">\r\n          <!-- 标题 -->\r\n          <div class=\"notification-title\">{{ notification.title }}</div>\r\n          \r\n          <!-- 消息内容 -->\r\n          <div class=\"notification-message\">{{ notification.message }}</div>\r\n          \r\n          <!-- 自定义插槽内容 -->\r\n          <div v-if=\"notification.slotContent\" class=\"notification-action\">\r\n            <component :is=\"notification.slotContent\" />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 关闭按钮 -->\r\n        <button \r\n          v-if=\"notification.showClose\"\r\n          class=\"notification-close\"\r\n          @click=\"closeNotification(notification.id)\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n    </transition-group>\r\n  </teleport>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\n\r\n// 全局通知列表\r\nconst notifications = ref([])\r\nlet notificationId = 0\r\n\r\n// 创建 NotifiMessage 静态方法对象\r\nconst NotifiMessage = {\r\n  // 默认配置\r\n  defaultOptions: {\r\n    title: '',\r\n    message: '',\r\n    duration: 4500,\r\n    position: 'top-right',\r\n    showClose: true,\r\n    offset: 20\r\n  },\r\n\r\n  // 显示通知\r\n  show(options = {}) {\r\n    const config = {\r\n      ...this.defaultOptions,\r\n      ...options,\r\n      id: ++notificationId\r\n    }\r\n\r\n    // 添加到通知列表\r\n    notifications.value.push(config)\r\n\r\n    // 如果设置了自动关闭时间，则自动关闭\r\n    if (config.duration > 0) {\r\n      setTimeout(() => {\r\n        this.close(config.id)\r\n      }, config.duration)\r\n    }\r\n\r\n    return {\r\n      close: () => this.close(config.id)\r\n    }\r\n  },\r\n\r\n  // 关闭指定通知\r\n  close(id) {\r\n    const index = notifications.value.findIndex(n => n.id === id)\r\n    if (index > -1) {\r\n      notifications.value.splice(index, 1)\r\n    }\r\n  },\r\n\r\n  // 关闭所有通知\r\n  closeAll() {\r\n    notifications.value = []\r\n  },\r\n\r\n  // 便捷方法\r\n  success(options = {}) {\r\n    return this.show(options)\r\n  },\r\n\r\n  warning(options = {}) {\r\n    return this.show(options)\r\n  },\r\n\r\n  error(options = {}) {\r\n    return this.show(options)\r\n  }\r\n}\r\n\r\n// 关闭通知的方法\r\nconst closeNotification = (id) => {\r\n  const index = notifications.value.findIndex(n => n.id === id)\r\n  if (index > -1) {\r\n    notifications.value.splice(index, 1)\r\n  }\r\n}\r\n\r\n\r\n// Vue 组件定义\r\nexport default {\r\n  name: 'MNotifiMessage',\r\n  setup() {\r\n    return {\r\n      notifications,\r\n      closeNotification\r\n    }\r\n  }\r\n}\r\n\r\n// 导出类供直接使用\r\nexport { NotifiMessage }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.notification-container {\r\n  position: fixed;\r\n  z-index: 9999;\r\n  pointer-events: none;\r\n}\r\n\r\n.custom-notification {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 400px;\r\n  background: #201F24;\r\n  border-radius: 12px;\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 4px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\r\n  pointer-events: auto;\r\n  z-index: 9999;\r\n  \r\n  // 多个通知的堆叠效果\r\n  &:nth-child(2) { top: 100px; }\r\n  &:nth-child(3) { top: 180px; }\r\n  &:nth-child(4) { top: 260px; }\r\n  &:nth-child(5) { top: 340px; }\r\n  \r\n  .notification-icon {\r\n    flex-shrink: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    transform: translate(-9px, -8px);\r\n    \r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: contain;\r\n    }\r\n  }\r\n  \r\n  .notification-content {\r\n    flex: 1;\r\n    \r\n    .notification-title {\r\n      color: #FFFFFF;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      margin-bottom: 8px;\r\n    }\r\n    \r\n    .notification-message {\r\n      color: rgba(255, 255, 255, 0.8);\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n      margin-bottom: 16px;\r\n    }\r\n    \r\n    .notification-action {\r\n      .custom-action-link {\r\n        color: #FFD905;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 6px;\r\n        transition: all 0.2s ease;\r\n        \r\n        &:hover {\r\n          color: #FFF;\r\n        }\r\n        \r\n        span {\r\n          line-height: 1;\r\n        }\r\n        \r\n        .arrow {\r\n          transition: transform 0.2s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          line-height: 1;\r\n        }\r\n        \r\n        &:hover .arrow {\r\n          transform: translateX(2px);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .notification-close {\r\n    position: absolute;\r\n    top: 12px;\r\n    right: 12px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: none;\r\n    background: transparent;\r\n    color: var(--icon-tertiary, #999);\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n    line-height: 1;\r\n    opacity: 0.6;\r\n    transition: opacity 0.2s ease;\r\n    \r\n    &:hover {\r\n      opacity: 1;\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n}\r\n\r\n// 动画效果\r\n.notification-enter-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.notification-leave-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.notification-enter-from {\r\n  opacity: 0;\r\n  transform: translateX(100%);\r\n}\r\n\r\n.notification-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(100%);\r\n}\r\n\r\n.notification-move {\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n// 响应式设计\r\n@media (max-width: 480px) {\r\n  .custom-notification {\r\n    width: calc(100vw - 40px);\r\n    left: 20px !important;\r\n    right: 20px !important;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-date-picker v-bind=\"mergedAttrs\" class=\"m-datepicker\" :popper-class=\"popperClass\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-date-picker>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\";\r\n\r\ndefineOptions({\r\n  name: \"MDatePicker\",\r\n});\r\n\r\n// 定义 props，提供默认的 type 值\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n});\r\n\r\n// 使用类名 Hook，排除 type 和 popperClass 属性\r\nconst { mergedAttrs, className: popperClass } = useClassName(\r\n  \"mc-datepicker-popper\",\r\n  \"popperClass\"\r\n);\r\n</script>\r\n<style lang=\"scss\">\r\n.m-datepicker{\r\n  &.el-date-editor.el-input__wrapper, .el-input__wrapper{\r\n    box-shadow: none ;\r\n    background-color: var(--bg-tertiary-hover);\r\n  }\r\n}\r\n.mc-datepicker-popper {\r\n  .el-picker-panel {\r\n    border: 1px solid var(--border-primary);\r\n    border-radius: 6px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    .current,\r\n    // .today:not(.in-range),\r\n    .start-date,\r\n    .end-date {\r\n      .el-date-table-cell {\r\n        .el-date-table-cell__text {\r\n          color: var(--text-quaternary);\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .start-date {\r\n      .el-date-table-cell {\r\n        border-top-left-radius: 3px;\r\n        border-bottom-left-radius: 3px;\r\n      }\r\n    }\r\n\r\n    .end-date {\r\n      .el-date-table-cell {\r\n        border-top-right-radius: 3px;\r\n        border-bottom-right-radius: 3px;\r\n      }\r\n    }\r\n\r\n    .el-button.is-text {\r\n      color: var(--text-brand);\r\n    }\r\n    .el-button.is-plain {\r\n      background: var(--bg-brand);\r\n      color: var(--text-quaternary);\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-empty v-bind=\"mergedAttrs\" :image=\"imageUrl\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-empty>\r\n</template>\r\n\r\n<script>\r\n// 定义可选的图片文件名（在模块作用域中）\r\nconst availableImages = [\r\n  '404',\r\n  'billing', \r\n  'cart',\r\n  'comments',\r\n  'dashboard',\r\n  'files',\r\n  'inbox',\r\n  'location',\r\n  'network',\r\n  'notifications',\r\n  'orders',\r\n  'records',\r\n  'session',\r\n  'subscription',\r\n  'todo',\r\n  'wishlist'\r\n]\r\n\r\nexport default {\r\n  name: 'MEmpty'\r\n}\r\n</script>\r\n\r\n<script setup>\r\nimport { computed, useAttrs } from 'vue'\r\n\r\nconst props = defineProps({\r\n  image: {\r\n    type: String,\r\n    default: 'orders',\r\n    validator: (value) => {\r\n      // 如果是完整的URL或路径，直接通过验证\r\n      if (value.includes('/') || value.includes('http')) {\r\n        return true\r\n      }\r\n      // 否则检查是否在可选列表中\r\n      return availableImages.includes(value)\r\n    }\r\n  }\r\n})\r\n\r\nconst attrs = useAttrs()\r\n\r\n// 排除 image 属性，避免重复绑定\r\nconst mergedAttrs = computed(() => {\r\n  const { image, ...rest } = attrs\r\n  return rest\r\n})\r\n\r\n// 计算图片URL\r\nconst imageUrl = computed(() => {\r\n  const { image } = props\r\n  \r\n  // 如果是完整的URL或路径，直接返回\r\n  if (image.includes('/') || image.includes('http')) {\r\n    return image\r\n  }\r\n  \r\n  // 使用 public 目录中的图片\r\n  // Vite 会自动处理 public 目录中的静态资源\r\n  return `/images/empty/${image}.png`\r\n})\r\n</script>\r\n","<template>\r\n  <el-table v-bind=\"$attrs\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-table>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: \"MTable\",\r\n});\r\n</script>\r\n<style lang=\"scss\">\r\n// Table 组件样式 - 无边框设计\r\n\r\n</style>\r\n","<template>\r\n  <el-table-column v-bind=\"$attrs\" class=\"m-table-column\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-table-column>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: \"MTableColumn\",\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// TableColumn 组件样式\r\n.m-table-column.el-table-column {\r\n  // 继承父级 Table 组件的样式\r\n}\r\n</style>\r\n","<template>\r\n  <div \r\n    v-if=\"visible\" \r\n    class=\"m-banner\"\r\n    :class=\"[\r\n      `m-banner--${type}`,\r\n      {\r\n        'm-banner--closable': closable,\r\n        'm-banner--with-icon': icon || slots.icon\r\n      }\r\n    ]\"\r\n    :style=\"bannerStyle\"\r\n  >\r\n    <div class=\"m-banner__content\">\r\n      <!-- 图标插槽 -->\r\n      <div v-if=\"icon || slots.icon\" class=\"m-banner__icon\">\r\n        <slot name=\"icon\">\r\n          <m-icon :name=\"icon\" :size=\"iconSize\" />\r\n        </slot>\r\n      </div>\r\n      \r\n      <!-- 主要内容 -->\r\n      <div class=\"m-banner__text\">\r\n        <slot>{{ content }}</slot>\r\n      </div>\r\n      \r\n      <!-- 关闭按钮 -->\r\n      <div v-if=\"closable\" class=\"m-banner__close\" @click=\"handleClose\">\r\n        <m-icon name=\"lucide-x\" :size=\"closeIconSize\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, useSlots } from 'vue'\r\nimport MIcon from '../Icon/Icon.vue'\r\n\r\n// 获取插槽\r\nconst slots = useSlots()\r\n\r\n// 定义 props\r\nconst props = defineProps({\r\n  // 横幅内容\r\n  content: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 横幅类型\r\n  type: {\r\n    type: String,\r\n    default: 'info',\r\n    validator: (value) => ['info', 'success', 'warning', 'error'].includes(value)\r\n  },\r\n  // 是否可关闭\r\n  closable: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  // 是否显示\r\n  visible: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  // 图标名称\r\n  icon: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 图标大小\r\n  iconSize: {\r\n    type: [String, Number],\r\n    default: '16px'\r\n  },\r\n  // 关闭图标大小\r\n  closeIconSize: {\r\n    type: [String, Number],\r\n    default: '16px'\r\n  },\r\n  // 自定义背景色\r\n  backgroundColor: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 自定义文字颜色\r\n  textColor: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 自定义边框颜色\r\n  borderColor: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 持续时间（毫秒），0 表示不自动关闭\r\n  duration: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n})\r\n\r\n// 定义 emits\r\nconst emit = defineEmits(['close', 'update:visible'])\r\n\r\n// 响应式数据\r\nconst internalVisible = ref(props.visible)\r\n\r\n// 监听 visible prop 变化\r\nwatch(() => props.visible, (newVal) => {\r\n  internalVisible.value = newVal\r\n})\r\n\r\n// 计算样式\r\nconst bannerStyle = computed(() => {\r\n  const style = {}\r\n  \r\n  if (props.backgroundColor) {\r\n    style.backgroundColor = props.backgroundColor\r\n  }\r\n  if (props.textColor) {\r\n    style.color = props.textColor\r\n  }\r\n  if (props.borderColor) {\r\n    style.borderColor = props.borderColor\r\n  }\r\n  \r\n  return style\r\n})\r\n\r\n// 默认图标映射\r\nconst defaultIcons = {\r\n  info: 'info',\r\n  success: 'check-circle',\r\n  warning: 'warning',\r\n  error: 'close-circle'\r\n}\r\n\r\n// 计算实际使用的图标\r\nconst actualIcon = computed(() => {\r\n  return props.icon || defaultIcons[props.type]\r\n})\r\n\r\n// 处理关闭\r\nconst handleClose = () => {\r\n  internalVisible.value = false\r\n  emit('update:visible', false)\r\n  emit('close')\r\n}\r\n\r\n// 自动关闭逻辑\r\nwatch(internalVisible, (newVal) => {\r\n  if (newVal && props.duration > 0) {\r\n    setTimeout(() => {\r\n      handleClose()\r\n    }, props.duration)\r\n  }\r\n})\r\n\r\n// 定义组件名称\r\ndefineOptions({\r\n  name: 'MBanner'\r\n})\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n  close: handleClose\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.m-banner {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 40px;\r\n  border-radius: 4px;\r\n  border: 1px solid;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  padding: 10px;\r\n  transition: all 0.3s ease;\r\n\r\n  &__content {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    flex: 1;\r\n  }\r\n\r\n  &__icon {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 8px;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  &__text {\r\n    flex: 1;\r\n    word-break: break-word;\r\n  }\r\n\r\n  &__close {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: 8px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n    border-radius: 3px;\r\n    transition: background-color 0.2s ease;\r\n    flex-shrink: 0;\r\n    min-width: 20px;\r\n    min-height: 20px;\r\n    opacity: 0.7;\r\n\r\n    &:hover {\r\n      background-color: rgba(0, 0, 0, 0.1);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  // 类型样式\r\n  &--info {\r\n    background-color: #e1f3ff;\r\n    border-color: #b3d8ff;\r\n    color: #0066cc;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(0, 102, 204, 0.1);\r\n    }\r\n  }\r\n\r\n  &--success {\r\n    background-color: #f0f9ff;\r\n    border-color: #b3e5b3;\r\n    color: #00a854;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(0, 168, 84, 0.1);\r\n    }\r\n  }\r\n\r\n  &--warning {\r\n    background-color: #fff7e6;\r\n    border-color: #ffd591;\r\n    color: #fa8c16;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(250, 140, 22, 0.1);\r\n    }\r\n  }\r\n\r\n  &--error {\r\n    background-color: #fff2f0;\r\n    border-color: #ffccc7;\r\n    color: #ff4d4f;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(255, 77, 79, 0.1);\r\n    }\r\n  }\r\n\r\n  // 带动画的关闭\r\n  &.m-banner-leave-active {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n    transition: opacity 0.3s ease, transform 0.3s ease;\r\n  }\r\n}\r\n\r\n// 深色主题适配\r\n@media (prefers-color-scheme: dark) {\r\n  .m-banner {\r\n    &--info {\r\n      background-color: rgba(24, 144, 255, 0.1);\r\n      border-color: rgba(24, 144, 255, 0.3);\r\n      color: #69c0ff;\r\n    }\r\n\r\n    &--success {\r\n      background-color: rgba(82, 196, 26, 0.1);\r\n      border-color: rgba(82, 196, 26, 0.3);\r\n      color: #95de64;\r\n    }\r\n\r\n    &--warning {\r\n      background-color: rgba(250, 173, 20, 0.1);\r\n      border-color: rgba(250, 173, 20, 0.3);\r\n      color: #ffd666;\r\n    }\r\n\r\n    &--error {\r\n      background-color: rgba(255, 77, 79, 0.1);\r\n      border-color: rgba(255, 77, 79, 0.3);\r\n      color: #ff7875;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-tabs\">\r\n    <div class=\"m-tabs__header\">\r\n      <div class=\"m-tabs__nav\" ref=\"navRef\">\r\n        <div\r\n          v-for=\"(tab, index) in tabs\"\r\n          :key=\"tab.name\"\r\n          :class=\"[\r\n            'm-tabs__item',\r\n            { 'is-active': activeTab === tab.name }\r\n          ]\"\r\n          @click=\"handleTabClick(tab.name)\"\r\n        >\r\n          {{ tab.label }}\r\n        </div>\r\n        <div\r\n          class=\"m-tabs__active-bar\"\r\n          :style=\"activeBarStyle\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"m-tabs__content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted, nextTick, provide, watch } from 'vue'\r\n\r\nexport default {\r\n  name: 'MTabs',\r\n  props: {\r\n    modelValue: {\r\n      type: [String, Number],\r\n      default: ''\r\n    },\r\n    closable: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  emits: ['update:modelValue', 'tab-click', 'tab-remove', 'tab-change', 'tab-add', 'edit'],\r\n  setup(props, { emit }) {\r\n    const navRef = ref(null)\r\n    const tabs = ref([])\r\n    const activeTab = ref(props.modelValue)\r\n\r\n    // 活动条样式\r\n    const activeBarStyle = ref({ width: '0px', left: '0px' })\r\n\r\n    // 更新活动条位置\r\n    const updateActiveBarPosition = () => {\r\n      nextTick(() => {\r\n        if (!navRef.value || tabs.value.length === 0) {\r\n          activeBarStyle.value = { width: '0px', left: '0px' }\r\n          return\r\n        }\r\n\r\n        const activeTabName = activeTab.value\r\n        if (!activeTabName) {\r\n          activeBarStyle.value = { width: '0px', left: '0px' }\r\n          return\r\n        }\r\n\r\n        const activeIndex = tabs.value.findIndex(tab => tab.name === activeTabName)\r\n        if (activeIndex === -1) {\r\n          activeBarStyle.value = { width: '0px', left: '0px' }\r\n          return\r\n        }\r\n\r\n        const navItems = navRef.value.querySelectorAll('.m-tabs__item')\r\n        const activeItem = navItems[activeIndex]\r\n        \r\n        if (!activeItem) {\r\n          activeBarStyle.value = { width: '0px', left: '0px' }\r\n          return\r\n        }\r\n\r\n        // 计算居中位置：tab中心位置 - 8px（16px宽度的一半）\r\n        const centerLeft = activeItem.offsetLeft + (activeItem.offsetWidth / 2) - 8\r\n\r\n        activeBarStyle.value = {\r\n          width: '16px',\r\n          left: `${centerLeft}px`\r\n        }\r\n      })\r\n    }\r\n\r\n    // 处理tab点击\r\n    const handleTabClick = (tabName) => {\r\n      if (tabName === activeTab.value) return\r\n      \r\n      const oldValue = activeTab.value\r\n      activeTab.value = tabName\r\n      emit('update:modelValue', tabName)\r\n      emit('tab-click', tabName)\r\n      emit('tab-change', tabName, oldValue)\r\n      updateActiveBarPosition()\r\n    }\r\n\r\n    // 处理tab关闭\r\n    const handleTabRemove = (tabName) => {\r\n      emit('tab-remove', tabName)\r\n      emit('edit', tabName, 'remove')\r\n    }\r\n\r\n    // 处理tab添加\r\n    const handleTabAdd = () => {\r\n      emit('tab-add')\r\n      emit('edit', null, 'add')\r\n    }\r\n\r\n    // 注册tab\r\n    const registerTab = (tab) => {\r\n      const index = tabs.value.findIndex(t => t.name === tab.name)\r\n      if (index === -1) {\r\n        tabs.value.push(tab)\r\n      } else {\r\n        tabs.value[index] = tab\r\n      }\r\n    }\r\n\r\n    // 注销tab\r\n    const unregisterTab = (tabName) => {\r\n      const index = tabs.value.findIndex(t => t.name === tabName)\r\n      if (index > -1) {\r\n        tabs.value.splice(index, 1)\r\n      }\r\n    }\r\n\r\n    // 提供给子组件的方法\r\n    provide('tabsContext', {\r\n      activeTab,\r\n      registerTab,\r\n      unregisterTab,\r\n      handleTabRemove,\r\n      handleTabAdd\r\n    })\r\n\r\n    // 监听modelValue变化\r\n    watch(() => props.modelValue, (newValue, oldValue) => {\r\n      if (newValue !== activeTab.value) {\r\n        activeTab.value = newValue\r\n        emit('tab-change', newValue, oldValue)\r\n        updateActiveBarPosition()\r\n      }\r\n    })\r\n\r\n    // 监听tabs变化\r\n    watch(tabs, () => {\r\n      updateActiveBarPosition()\r\n    }, { deep: true })\r\n\r\n    // 初始化时设置默认active tab\r\n    onMounted(() => {\r\n      if (!activeTab.value && tabs.value.length > 0) {\r\n        const firstTab = tabs.value[0]\r\n        activeTab.value = firstTab.name\r\n        emit('update:modelValue', activeTab.value)\r\n      }\r\n      updateActiveBarPosition()\r\n    })\r\n\r\n    return {\r\n      navRef,\r\n      tabs,\r\n      activeTab,\r\n      activeBarStyle,\r\n      handleTabClick,\r\n      handleTabRemove,\r\n      handleTabAdd,\r\n      registerTab,\r\n      unregisterTab,\r\n      updateActiveBarPosition\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.m-tabs {\r\n  &__header {\r\n    position: relative;\r\n  }\r\n\r\n  &__nav {\r\n    position: relative;\r\n    display: flex;\r\n    border-bottom: 1px solid var(--border-primary);\r\n  }\r\n\r\n  &__item {\r\n    position: relative;\r\n    height: 24px;\r\n    margin-right: 20px;\r\n    margin-bottom: 6px;\r\n    cursor: pointer;\r\n    color: var(--text-tertiary);\r\n    font-size: var(--font-size-text-base);\r\n    transition: color 0.3s;\r\n    user-select: none;\r\n    font-weight: 600;\r\n\r\n    &:hover {\r\n      color: var(--text-brand);\r\n    }\r\n\r\n    &.is-active {\r\n      color: var(--text-brand);\r\n    }\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  &__active-bar {\r\n    position: absolute;\r\n    bottom: 0;\r\n    height: 3px;\r\n    background-color: var(--text-brand);\r\n    transition: all 0.3s;\r\n    z-index: 1;\r\n  }\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div\r\n    v-show=\"isActive\"\r\n    class=\"m-tab-pane\"\r\n    :class=\"{ 'is-active': isActive }\"\r\n  >\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject, computed, onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  name: 'MTabPane',\r\n  props: {\r\n    label: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    name: {\r\n      type: [String, Number],\r\n      default: ''\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    closable: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  setup(props) {\r\n    const tabsContext = inject('tabsContext')\r\n    \r\n    // 计算tab名称，如果没有提供name则使用label\r\n    const tabName = computed(() => {\r\n      return props.name || props.label\r\n    })\r\n\r\n    // 计算是否激活\r\n    const isActive = computed(() => {\r\n      return tabsContext.activeTab.value === tabName.value\r\n    })\r\n\r\n    // 组件挂载时注册tab\r\n    onMounted(() => {\r\n      const tabInfo = {\r\n        label: props.label,\r\n        name: tabName.value,\r\n        disabled: props.disabled,\r\n        closable: props.closable\r\n      }\r\n      tabsContext.registerTab(tabInfo)\r\n    })\r\n\r\n    // 组件卸载时注销tab\r\n    onUnmounted(() => {\r\n      tabsContext.unregisterTab(tabName.value)\r\n    })\r\n\r\n    return {\r\n      isActive,\r\n      tabName\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.m-tab-pane {\r\n  display: none;\r\n\r\n  &.is-active {\r\n    display: block;\r\n  }\r\n}\r\n</style>\r\n","/**\r\n * 样式工具函数\r\n * 用于确保组件样式完全覆盖 Element Plus\r\n */\r\n\r\n/**\r\n * 为元素添加高优先级样式类\r\n * @param {HTMLElement} element - 目标元素\r\n */\r\nexport function addOverrideClass(element) {\r\n  if (element && element.classList) {\r\n    element.classList.add('mc-ui-override');\r\n  }\r\n}\r\n\r\n/**\r\n * 为 Vue 组件实例添加覆盖样式\r\n * @param {Object} componentInstance - Vue 组件实例\r\n */\r\nexport function addComponentOverride(componentInstance) {\r\n  if (componentInstance && componentInstance.$el) {\r\n    addOverrideClass(componentInstance.$el);\r\n  }\r\n}\r\n\r\n/**\r\n * 全局应用样式覆盖\r\n * 在应用启动时调用，确保所有 Element Plus 组件都被覆盖\r\n */\r\nexport function applyGlobalOverride() {\r\n  // 为 body 添加覆盖类\r\n  if (typeof document !== 'undefined') {\r\n    document.body.classList.add('mc-ui-override');\r\n    \r\n    // 监听动态添加的 Element Plus 组件\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node.nodeType === 1 && node.classList) {\r\n            // 为新添加的 Element Plus 组件添加覆盖类\r\n            if (node.className && typeof node.className === 'string' && node.className.includes('el-')) {\r\n              const parent = node.closest('.mc-ui-override') || node.parentElement;\r\n              if (parent && !parent.classList.contains('mc-ui-override')) {\r\n                parent.classList.add('mc-ui-override');\r\n              }\r\n            }\r\n            \r\n            // 检查子元素\r\n            const elComponents = node.querySelectorAll('[class*=\"el-\"]');\r\n            elComponents.forEach(el => {\r\n              const parent = el.closest('.mc-ui-override') || el.parentElement;\r\n              if (parent && !parent.classList.contains('mc-ui-override')) {\r\n                parent.classList.add('mc-ui-override');\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.body, {\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 强制刷新组件样式\r\n * @param {string} selector - CSS 选择器\r\n */\r\nexport function forceRefreshStyles(selector = '[class*=\"el-\"]') {\r\n  if (typeof document !== 'undefined') {\r\n    const elements = document.querySelectorAll(selector);\r\n    elements.forEach(el => {\r\n      const parent = el.closest('.mc-ui-override') || el.parentElement;\r\n      if (parent && !parent.classList.contains('mc-ui-override')) {\r\n        parent.classList.add('mc-ui-override');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 创建带有样式覆盖的 Element Plus 组件配置\r\n * @param {Object} componentConfig - 组件配置\r\n * @returns {Object} 增强后的组件配置\r\n */\r\nexport function createOverrideComponent(componentConfig) {\r\n  return {\r\n    ...componentConfig,\r\n    mounted() {\r\n      addOverrideClass(this.$el);\r\n      if (componentConfig.mounted) {\r\n        componentConfig.mounted.call(this);\r\n      }\r\n    },\r\n    updated() {\r\n      addOverrideClass(this.$el);\r\n      if (componentConfig.updated) {\r\n        componentConfig.updated.call(this);\r\n      }\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @mc-markets/ui - 自定义组件库\r\n * \r\n * 提供自定义组件和工具函数\r\n * 支持 Element Plus 组件回退机制\r\n * 将 Element Plus 组件前缀从 el- 转换为 m- 并导出\r\n * 导出 Element Plus 事件相关功能（Message、MessageBox、Notification、Loading 等）\r\n * \r\n * @version 1.0.83\n */\r\n\r\nimport * as ElementPlusComponents from 'element-plus'\r\n// 导入样式文件\r\nimport MIcon from './components/Icon/Icon.vue'\r\nimport MButton from './components/Button/Button.vue'\r\nimport MInput from './components/Input/Input.vue'\r\nimport MForm from './components/Form/Form.vue'\r\nimport MFormItem from './components/FormItem/FormItem.vue'\r\nimport MTooltip from './components/Tooltip/Tooltip.vue'\r\nimport MSelect from './components/Select/Select.vue'\r\nimport MOption from './components/Option/Option.vue'\r\nimport MOptionGroup from './components/OptionGroup/OptionGroup.vue'\r\nimport MPagination from './components/Pagination/Pagination.vue'\r\nimport MRadio from './components/Radio/Radio.vue'\r\nimport MRadioGroup from './components/RadioGroup/RadioGroup.vue'\r\nimport MRadioButton from './components/RadioButton/RadioButton.vue'\r\nimport MSwitch from './components/Switch/Switch.vue'\r\nimport MTag from './components/Tag/Tag.vue'\r\nimport MAlert from './components/Alert/Alert.vue'\r\nimport MDialog from './components/Dialog/Dialog.vue'\r\nimport MNotification from './components/Notification/Notification.vue'\r\nimport MMessage, { Message } from './components/Message/Message.vue'\r\nimport MNotifiMessage, { NotifiMessage } from './components/NotifiMessage/NotifiMessage.vue'\r\nimport MDatePicker from './components/DatePicker/DatePicker.vue'\r\nimport MEmpty from './components/Empty/Empty.vue'\r\nimport MTable from './components/Table/Table.vue'\r\nimport MTableColumn from './components/Table/TableColumn.vue'\r\nimport MBanner from './components/Banner/Banner.vue'\r\nimport MTabs from './components/Tabs/Tabs.vue'\r\nimport MTabPane from './components/Tabs/TabPane.vue'\r\n\r\nconst components = [MIcon, MButton, MInput, MForm, MFormItem, MTooltip, MSelect, MOption, MOptionGroup, MPagination, MRadio, MRadioGroup, MRadioButton, MSwitch, MTag, MAlert, MDialog, MNotification, MMessage, MNotifiMessage, MDatePicker, MEmpty, MTable, MTableColumn, MBanner, MTabs, MTabPane]\r\n\r\n// 全局组件配置 - 需要自动创建实例的组件\r\nconst globalInstanceComponents = [\r\n  { id: 'global-message-container', component: MMessage },\r\n  { id: 'global-notification-container', component: MNotifiMessage }\r\n]\r\n\r\n// 创建单个全局组件实例\r\nasync function createGlobalComponent({ id, component }) {\r\n  try {\r\n    // 检查是否已存在，避免重复创建\r\n    if (document.getElementById(id)) return\r\n    \r\n    const { createApp, h } = await import('vue')\r\n    \r\n    // 创建容器\r\n    const container = document.createElement('div')\r\n    container.id = id\r\n    document.body.appendChild(container)\r\n    \r\n    // 创建并挂载 Vue 应用\r\n    const app = createApp({\r\n      render: () => h(component)\r\n    })\r\n    \r\n    app.mount(`#${id}`)\r\n  } catch (error) {\r\n    console.warn(`Failed to create global component ${id}:`, error)\r\n  }\r\n}\r\n\r\n// 创建所有全局组件实例\r\nasync function createGlobalComponents() {\r\n  const promises = globalInstanceComponents.map(createGlobalComponent)\r\n  await Promise.all(promises)\r\n}\r\n\r\n// 存储转换后的 Element Plus 组件\r\nconst convertedComponents = {}\r\n\r\nfunction registerElementPlus(app) {\r\n  // 获取已注册的自定义组件名称\r\n  const customComponentNames = components.map(comp => {\r\n    if (comp && comp.name && typeof comp.name === 'string') {\r\n      let name = comp.name.toLowerCase()\r\n      const nameMap = {\r\n        'mradiogroup': 'm-radio-group',\r\n        'mradiobutton': 'm-radio-button',\r\n        'mformitem': 'm-form-item',\r\n        'moptiongroup': 'm-option-group',\r\n        'mtabs': 'm-tabs',\r\n        'mtabpane': 'm-tab-pane'\r\n      }\r\n      return nameMap[name] || name.replace(/^m/, 'm-')\r\n    }\r\n    return null\r\n  }).filter(Boolean)\r\n\r\n  \r\n  Object.entries(ElementPlusComponents).forEach(([key, comp]) => {\r\n    if (comp && comp.name && typeof comp.name === 'string' && comp.name.startsWith('El')) {\r\n      // 将 ElOptionGroup 转换为 m-option-group\r\n      const mName = 'm-' + comp.name.slice(2).replace(/([A-Z])/g, '-$1').toLowerCase().replace(/^-/, '')\r\n      \r\n      // 只注册没有被自定义组件覆盖的Element Plus组件\r\n      if (!customComponentNames.includes(mName)) {\r\n        // 检查组件是否已经注册，避免重复注册警告\r\n        if (!app._context.components[mName]) {\r\n          app.component(mName, comp)\r\n        } else {\r\n        }\r\n      } else {\r\n      }\r\n      \r\n      // 存储转换后的组件用于导出\r\n      const exportName = 'M' + comp.name.slice(2) // ElButton -> MButton\r\n      convertedComponents[exportName] = comp\r\n    }\r\n  })\r\n}\r\n\r\nconst install = (app) => {\r\n  // 应用全局样式覆盖\r\n  if (typeof window !== 'undefined') {\r\n    import('./utils/styleUtils.js').then(({ applyGlobalOverride }) => {\r\n      applyGlobalOverride();\r\n    });\r\n  }\r\n  \r\n  console.log('🚀 开始安装 @mc-markets/ui 组件库...')\r\n  \r\n  // 先注册自定义组件 - 确保优先级\r\n  components.forEach(component => {\r\n    if (component && component.name && typeof component.name === 'string') {\r\n      let name = component.name.toLowerCase()\r\n      // 处理特定的组件名称映射\r\n      const nameMap = {\r\n        'mradiogroup': 'm-radio-group',\r\n        'mradiobutton': 'm-radio-button',\r\n        'mformitem': 'm-form-item',\r\n        'moptiongroup': 'm-option-group',\r\n        'mtabs': 'm-tabs',\r\n        'mtabpane': 'm-tab-pane'\r\n      }\r\n      name = nameMap[name] || name.replace(/^m/, 'm-')\r\n      \r\n      // 强制注册自定义组件，确保覆盖任何已存在的组件\r\n      app.component(name, component)\r\n    }\r\n  })\r\n  \r\n  // 然后注册转换后的 Element Plus 组件（只注册没有自定义组件覆盖的）\r\n  registerElementPlus(app)\r\n  \r\n  // 自动创建全局组件实例\r\n  if (typeof window !== 'undefined') {\r\n    createGlobalComponents()\r\n  }\r\n}\r\n\r\n// 工具函数：检查组件注册状态\r\nexport function checkComponentRegistration(app) {\r\n  const registeredComponents = Object.keys(app._context.components || {})\r\n  const customComponents = components.map(comp => {\r\n    if (comp && comp.name && typeof comp.name === 'string') {\r\n      let name = comp.name.toLowerCase()\r\n      const nameMap = {\r\n        'mradiogroup': 'm-radio-group',\r\n        'mradiobutton': 'm-radio-button',\r\n        'mformitem': 'm-form-item',\r\n        'moptiongroup': 'm-option-group',\r\n        'mtabs': 'm-tabs',\r\n        'mtabpane': 'm-tab-pane'\r\n      }\r\n      return nameMap[name] || name.replace(/^m/, 'm-')\r\n    }\r\n    return null\r\n  }).filter(Boolean)\r\n  \r\n  console.log('📊 组件注册状态报告:')\r\n  console.log('已注册的组件:', registeredComponents.filter(name => name.startsWith('m-')))\r\n  console.log('自定义组件:', customComponents)\r\n  \r\n  return {\r\n    registered: registeredComponents,\r\n    custom: customComponents,\r\n    conflicts: registeredComponents.filter(name => \r\n      name.startsWith('m-') && customComponents.includes(name)\r\n    )\r\n  }\r\n}\r\n\r\nexport default { install }\r\nexport { MIcon, MButton, MInput, MForm, MFormItem, MTooltip, MSelect, MPagination, MRadio, MRadioGroup, MRadioButton, MSwitch, MTag, MAlert, MDialog, MNotification, MMessage, MNotifiMessage, MDatePicker, MEmpty, MTable, MTableColumn, MBanner, MTabs, MTabPane }\r\n\r\n// 导出样式工具函数\r\nexport { \r\n  addOverrideClass, \r\n  addComponentOverride, \r\n  applyGlobalOverride, \r\n  forceRefreshStyles,\r\n  createOverrideComponent \r\n} from './utils/styleUtils.js'\r\n\r\n// 手动导出常用的 Element Plus 函数（只导出函数，不导出组件）\r\nexport const MMessageBox = ElementPlusComponents.ElMessageBox\r\n\r\n// 导出自定义组件的静态方法\r\nexport { Message, NotifiMessage }\r\n\r\n// 导出转换后的 Element Plus 组件\r\nexport const mComponents = { ...convertedComponents }\r\n\r\n// 导出常用的 Element Plus 组件\r\nexport const MButtonGroup = convertedComponents.MButtonGroup\r\nexport const MBreadcrumb = convertedComponents.MBreadcrumb\r\nexport const MBreadcrumbItem = convertedComponents.MBreadcrumbItem\r\nexport const MCarousel = convertedComponents.MCarousel\r\nexport const MCarouselItem = convertedComponents.MCarouselItem\r\nexport const MCascader = convertedComponents.MCascader\r\nexport const MCascaderPanel = convertedComponents.MCascaderPanel\r\nexport const MCheckTag = convertedComponents.MCheckTag\r\nexport const MCalendar = convertedComponents.MCalendar\r\nexport const MTimePicker = convertedComponents.MTimePicker\r\nexport const MDateTimePicker = convertedComponents.MDateTimePicker\r\nexport const MColorPicker = convertedComponents.MColorPicker\r\nexport const MTransfer = convertedComponents.MTransfer\r\nexport const MTree = convertedComponents.MTree\r\nexport const MTreeSelect = convertedComponents.MTreeSelect\r\nexport const MUpload = convertedComponents.MUpload\r\nexport const MImage = convertedComponents.MImage\r\nexport const MImageViewer = convertedComponents.MImageViewer\r\nexport const MBacktop = convertedComponents.MBacktop\r\nexport const MInfiniteScroll = convertedComponents.MInfiniteScroll\r\nexport const MAffix = convertedComponents.MAffix\r\nexport const MScrollbar = convertedComponents.MScrollbar\r\nexport const MResult = convertedComponents.MResult\r\nexport const MSkeleton = convertedComponents.MSkeleton\r\nexport const MLoading = convertedComponents.MLoading\r\nexport const MSpinner = convertedComponents.MSpinner\r\nexport const MProgress = convertedComponents.MProgress\r\nexport const MBadge = convertedComponents.MBadge\r\nexport const MAvatar = convertedComponents.MAvatar\r\nexport const MImagePreview = convertedComponents.MImagePreview\r\nexport const MTeleport = convertedComponents.MTeleport\r\nexport const MConfigProvider = convertedComponents.MConfigProvider\r\n"],"names":["props","__props","emit","__emit","iconClass","computed","classes","iconStyle","style","handleClick","event","_openBlock","_createElementBlock","_mergeProps","_createBlock","_component_el_button","_ctx","_createSlots","_renderSlot","name","formRef","ref","useAttrs","__expose","callback","_a","prop","_component_el_form","_component_el_form_item","classNames","excludeAttrs","attrs","excludeKeys","result","__spreadValues","key","useClassName","defaultClass","excludeKey","mergedAttrs","className","popperClass","_component_el_tooltip","_unref","_component_el_select","_component_el_option","_normalizeProps","_guardReactiveProps","_component_el_option_group","_component_el_pagination","_component_el_radio","computedPopperClass","defaultPopperClass","__objRest","_component_el_radio_button","computedPrefixIcon","_hoisted_1","_createElementVNode","_hoisted_2","availableTypes","__default__","useCustomIcon","rest","__spreadProps","iconUrl","_component_el_alert","dialogVisible","_useModel","_createVNode","_component_el_dialog","$slots","_withCtx","close","titleId","titleClass","_sfc_main","_component_el_notification","messages","messageId","Message","options","config","existingIndex","m","id","message","index","closeMessage","_hoisted_6","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_9","_toDisplayString","$event","$setup","notifications","notificationId","NotifiMessage","closeNotification","notification","availableImages","image","imageUrl","_component_el_empty","_component_el_table","_component_el_table_column","slots","useSlots","internalVisible","watch","newVal","bannerStyle","defaultIcons","handleClose","_normalizeClass","_normalizeStyle","navRef","tabs","activeTab","updateActiveBarPosition","activeBarStyle","activeTabName","activeIndex","tab","activeItem","centerLeft","handleTabClick","tabName","oldValue","handleTabRemove","unregisterTab","newValue","onMounted","_Fragment","_renderList","tabsContext","inject","tabInfo","onUnmounted","isActive","addOverrideClass","element","addComponentOverride","componentInstance","applyGlobalOverride","mutations","mutation","node","parent","el","forceRefreshStyles","selector","createOverrideComponent","componentConfig","components","MIcon","MButton","MInput","MForm","MFormItem","MTooltip","MSelect","MOption","MOptionGroup","MPagination","MRadio","MRadioGroup","MRadioButton","MSwitch","MTag","MAlert","MDialog","MNotification","MMessage","MNotifiMessage","MDatePicker","MEmpty","MTable","MTableColumn","MBanner","MTabs","MTabPane","globalInstanceComponents","createGlobalComponent","_0","__async","component","createApp","h","container","error","createGlobalComponents","promises","convertedComponents","registerElementPlus","app","customComponentNames","comp","ElementPlusComponents","mName","exportName","install","styleUtils","checkComponentRegistration","registeredComponents","customComponents","MMessageBox","mComponents","MButtonGroup","MBreadcrumb","MBreadcrumbItem","MCarousel","MCarouselItem","MCascader","MCascaderPanel","MCheckTag","MCalendar","MTimePicker","MDateTimePicker","MColorPicker","MTransfer","MTree","MTreeSelect","MUpload","MImage","MImageViewer","MBacktop","MInfiniteScroll","MAffix","MScrollbar","MResult","MSkeleton","MLoading","MSpinner","MProgress","MBadge","MAvatar","MImagePreview","MTeleport","MConfigProvider"],"mappings":"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"}