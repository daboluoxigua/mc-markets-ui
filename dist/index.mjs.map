{"version":3,"file":"index.mjs","sources":["../packages/components/Icon/Icon.vue","../packages/components/Button/Button.vue","../packages/components/Input/Input.vue","../packages/components/Form/Form.vue","../packages/components/FormItem/FormItem.vue","../packages/utils/classNames.js","../packages/hooks/useClassName.js","../packages/components/Tooltip/Tooltip.vue","../packages/components/Select/Select.vue","../packages/components/Option/Option.vue","../packages/components/OptionGroup/OptionGroup.vue","../packages/components/Pagination/Pagination.vue","../packages/components/Radio/Radio.vue","../packages/components/RadioGroup/RadioGroup.vue","../packages/components/RadioButton/RadioButton.vue","../packages/components/Switch/Switch.vue","../packages/components/Tag/Tag.vue","../packages/components/Alert/Alert.vue","../packages/components/Dialog/Dialog.vue","../packages/components/Notification/Notification.vue","../packages/components/Message/Message.vue","../packages/components/NotifiMessage/NotifiMessage.vue","../packages/components/DatePicker/DatePicker.vue","../packages/components/Empty/Empty.vue","../packages/components/Table/Table.vue","../packages/components/Table/TableColumn.vue","../packages/components/Banner/Banner.vue","../packages/components/Tabs/Tabs.vue","../packages/components/Tabs/TabPane.vue","../packages/utils/styleUtils.js","../packages/index.js"],"sourcesContent":["<template>\r\n  <i \r\n    :class=\"iconClass\" \r\n    :style=\"iconStyle\"\r\n    v-bind=\"$attrs\"\r\n    @click=\"handleClick\"\r\n  >\r\n    <slot></slot>\r\n  </i>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\n\r\n// 定义组件名\r\ndefineOptions({\r\n  name: 'MIcon'\r\n})\r\n\r\nconst props = defineProps({\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  size: {\r\n    type: [String, Number],\r\n    default: '16px'\r\n  },\r\n  color: {\r\n    type: String,\r\n    default: 'inherit'\r\n  },\r\n  spin: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  pulse: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  rotate: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  flip: {\r\n    type: String,\r\n    default: undefined\r\n  },\r\n  prefix: {\r\n    type: String,\r\n    default: 'icon'\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['click'])\r\n\r\n// 计算图标类名\r\nconst iconClass = computed(() => {\r\n  const classes = ['iconfont']\r\n  \r\n  // 添加图标名称类\r\n  if (props.name) {\r\n    classes.push(`${props.prefix}-${props.name}`)\r\n  }\r\n  \r\n  // 添加动画类\r\n  if (props.spin) {\r\n    classes.push('icon-spin')\r\n  }\r\n  if (props.pulse) {\r\n    classes.push('icon-pulse')\r\n  }\r\n  \r\n  // 添加翻转类\r\n  if (props.flip) {\r\n    classes.push(`icon-flip-${props.flip}`)\r\n  }\r\n  \r\n  return classes\r\n})\r\n\r\n// 计算图标样式\r\nconst iconStyle = computed(() => {\r\n  const style = {}\r\n  \r\n  // 设置大小\r\n  if (props.size) {\r\n    if (typeof props.size === 'number') {\r\n      style.fontSize = `${props.size}px`\r\n    } else {\r\n      style.fontSize = props.size\r\n    }\r\n  }\r\n  \r\n  // 设置颜色\r\n  if (props.color) {\r\n    style.color = props.color\r\n  }\r\n  \r\n  // 设置旋转\r\n  if (props.rotate !== 0) {\r\n    style.transform = `rotate(${props.rotate}deg)`\r\n  }\r\n  \r\n  return style\r\n})\r\n\r\n// 点击事件处理\r\nconst handleClick = (event) => {\r\n  emit('click', event)\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.iconfont {\r\n  display: inline-block;\r\n  font-style: normal;\r\n  vertical-align: baseline;\r\n  text-align: center;\r\n  text-transform: none;\r\n  line-height: 1;\r\n  text-rendering: optimizeLegibility;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n/* 旋转动画 */\r\n.icon-spin {\r\n  animation: icon-spin 1s linear infinite;\r\n}\r\n\r\n@keyframes icon-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* 脉冲动画 */\r\n.icon-pulse {\r\n  animation: icon-pulse 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes icon-pulse {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n/* 翻转效果 */\r\n.icon-flip-horizontal {\r\n  transform: scaleX(-1);\r\n}\r\n\r\n.icon-flip-vertical {\r\n  transform: scaleY(-1);\r\n}\r\n\r\n.icon-flip-both {\r\n  transform: scale(-1);\r\n}\r\n\r\n/* 当有旋转时，需要与翻转效果结合 */\r\n.icon-spin.icon-flip-horizontal {\r\n  animation: icon-spin-flip-horizontal 1s linear infinite;\r\n}\r\n\r\n.icon-spin.icon-flip-vertical {\r\n  animation: icon-spin-flip-vertical 1s linear infinite;\r\n}\r\n\r\n.icon-spin.icon-flip-both {\r\n  animation: icon-spin-flip-both 1s linear infinite;\r\n}\r\n\r\n@keyframes icon-spin-flip-horizontal {\r\n  from {\r\n    transform: rotate(0deg) scaleX(-1);\r\n  }\r\n  to {\r\n    transform: rotate(360deg) scaleX(-1);\r\n  }\r\n}\r\n\r\n@keyframes icon-spin-flip-vertical {\r\n  from {\r\n    transform: rotate(0deg) scaleY(-1);\r\n  }\r\n  to {\r\n    transform: rotate(360deg) scaleY(-1);\r\n  }\r\n}\r\n\r\n@keyframes icon-spin-flip-both {\r\n  from {\r\n    transform: rotate(0deg) scale(-1);\r\n  }\r\n  to {\r\n    transform: rotate(360deg) scale(-1);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-button v-bind=\"$attrs\" class=\"m-button\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-button>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MButton'\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// Button 组件样式 - 使用高优先级选择器确保不被全局样式覆盖\r\n\r\n</style>","<template>\r\n  <el-input v-bind=\"$attrs\" class=\"m-input\" :class=\"{ solid: $attrs.styleType === 'solid' }\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-input>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MInput'\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n</style>","<template>\r\n  <el-form ref=\"formRef\" v-bind=\"$attrs\" class=\"m-form\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, useAttrs, defineExpose } from 'vue'\r\n\r\ndefineOptions({\r\n  name: 'MForm'\r\n})\r\n\r\nconst formRef = ref()\r\nconst attrs = useAttrs()\r\n\r\n// 暴露表单方法\r\ndefineExpose({\r\n  validate: (callback) => formRef.value?.validate(callback),\r\n  validateField: (props, callback) => formRef.value?.validateField(props, callback),\r\n  resetFields: () => formRef.value?.resetFields(),\r\n  scrollToField: (prop) => formRef.value?.scrollToField(prop),\r\n  clearValidate: (props) => formRef.value?.clearValidate(props)\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","<template>\r\n  <el-form-item v-bind=\"$attrs\" class=\"m-form-item\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-form-item>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MFormItem'\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// FormItem 组件样式 - 使用 m-form-item 类名隔离样式\r\n.m-form-item {\r\n  // 自定义样式可以在这里添加\r\n}\r\n</style>","/**\r\n * 类名装饰器方法\r\n * @param {...(string|boolean|undefined|null)} classes - 类名参数\r\n * @returns {string} 合并后的类名字符串\r\n */\r\nexport const classNames = (...classes) => {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\n/**\r\n * 排除指定属性\r\n * @param {Object} attrs - 原始属性对象\r\n * @param {...string} excludeKeys - 要排除的属性名\r\n * @returns {Object} 排除指定属性后的新对象\r\n */\r\nexport const excludeAttrs = (attrs, ...excludeKeys) => {\r\n  const result = { ...attrs }\r\n  excludeKeys.forEach(key => {\r\n    delete result[key]\r\n  })\r\n  return result\r\n}\r\n\r\n","import { computed, useAttrs } from 'vue'\r\nimport { classNames, excludeAttrs } from '@packages/utils/classNames.js'\r\n\r\n/**\r\n * 类名 Hook\r\n * @param {string} defaultClass - 默认的类名\r\n * @param {string} excludeKey - 要排除的属性名，默认为 'popperClass'\r\n * @returns {Object} 包含 mergedAttrs 和 className 的对象\r\n */\r\nexport function useClassName(defaultClass, excludeKey = 'popperClass') {\r\n  const attrs = useAttrs()\r\n  \r\n  // 排除指定属性\r\n  const mergedAttrs = computed(() => excludeAttrs(attrs, excludeKey))\r\n  \r\n  // 计算类名\r\n  const className = computed(() => classNames(defaultClass, attrs[excludeKey]))\r\n  \r\n  return {\r\n    mergedAttrs,\r\n    className\r\n  }\r\n}\r\n","<template>\r\n  <el-tooltip v-bind=\"mergedAttrs\" :popper-class=\"popperClass\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-tooltip>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\"\r\n\r\ndefineOptions({\r\n  name: 'MTooltip'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } = useClassName('mc-tooltip-popper')\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.mc-tooltip-popper {\r\n  &.is-dark {\r\n    color: #fff !important;\r\n    background-color: var(--all-gray-6) !important;\r\n    border-color: var(--all-gray-6) !important;\r\n    .el-popper__arrow::before{\r\n        background-color: var(--all-gray-6) !important;\r\n        border-color: var(--all-gray-6) !important;\r\n    }\r\n  }\r\n  \r\n  &.is-light {\r\n    color: #606266 !important;\r\n    background-color: #fff !important;\r\n    border: 1px solid #e4e7ed !important;\r\n    \r\n    .el-popper__arrow::before {\r\n      background-color: #fff !important;\r\n      border-color: #fff !important;\r\n    }\r\n  }\r\n}\r\n\r\n:deep(.el-popper) {\r\n  &.is-light {\r\n    background: var(--bg-tertiary-hover);\r\n    border-color: var(--border-primary);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-select\r\n    class=\"m-select\"\r\n    :class=\"{ solid: $attrs.styleType === 'solid' }\"\r\n    :show-arrow=\"false\"\r\n    v-bind=\"$attrs\"\r\n  >\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-select>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: \"MSelect\",\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n","<template>\r\n  <el-option v-bind=\"$attrs\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-option>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MOption'\r\n})\r\n</script>\r\n","<template>\r\n  <el-option-group v-bind=\"$attrs\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-option-group>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MOptionGroup'\r\n})\r\n</script>\r\n","\r\n<template>\r\n  <el-pagination v-bind=\"$attrs\" class=\"m-pagination\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-pagination>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MPagination'\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.m-pagination {\r\n  &.is-background .el-pager li.is-active{\r\n    color: var(--text-quaternary) !important;\r\n  }\r\n}\r\n</style>\r\n\r\n","<template>\r\n  <el-radio v-bind=\"mergedAttrs\" class=\"m-radio\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-radio>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\"\r\n\r\ndefineOptions({\r\n  name: 'MRadio'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } = useClassName('mc-radio-popper')\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// Radio popper-class 样式\r\n// .mc-radio-popper {\r\n//   自定义单选框样式可以在这里添加\r\n// }\r\n\r\n// 自定义主题示例\r\n.mc-radio-custom {\r\n  .el-radio__input {\r\n    .el-radio__inner {\r\n      background: linear-gradient(45deg, #667eea, #764ba2);\r\n      border-color: #667eea;\r\n      \r\n      &:hover {\r\n        background: linear-gradient(45deg, #5a6fd8, #6a4190);\r\n        border-color: #5a6fd8;\r\n      }\r\n    }\r\n    \r\n    &.is-checked .el-radio__inner {\r\n      background: linear-gradient(45deg, #4c63d2, #5d3a7e);\r\n      border-color: #4c63d2;\r\n    }\r\n  }\r\n  \r\n  .el-radio__label {\r\n    color: #667eea;\r\n    font-weight: 500;\r\n  }\r\n}\r\n\r\n.mc-radio-success {\r\n  .el-radio__input {\r\n    .el-radio__inner {\r\n      background-color: #67c23a;\r\n      border-color: #67c23a;\r\n      \r\n      &:hover {\r\n        background-color: #5daf34;\r\n        border-color: #5daf34;\r\n      }\r\n    }\r\n    \r\n    &.is-checked .el-radio__inner {\r\n      background-color: #529b2e;\r\n      border-color: #529b2e;\r\n    }\r\n  }\r\n  \r\n  .el-radio__label {\r\n    color: #67c23a;\r\n    font-weight: 500;\r\n  }\r\n}\r\n\r\n.mc-radio-warning {\r\n  .el-radio__input {\r\n    .el-radio__inner {\r\n      background-color: #e6a23c;\r\n      border-color: #e6a23c;\r\n      \r\n      &:hover {\r\n        background-color: #d4922b;\r\n        border-color: #d4922b;\r\n      }\r\n    }\r\n    \r\n    &.is-checked .el-radio__inner {\r\n      background-color: #c8951f;\r\n      border-color: #c8951f;\r\n    }\r\n  }\r\n  \r\n  .el-radio__label {\r\n    color: #e6a23c;\r\n    font-weight: 500;\r\n  }\r\n}\r\n\r\n.mc-radio-danger {\r\n  .el-radio__input {\r\n    .el-radio__inner {\r\n      background-color: #f56c6c;\r\n      border-color: #f56c6c;\r\n      \r\n      &:hover {\r\n        background-color: #f45454;\r\n        border-color: #f45454;\r\n      }\r\n    }\r\n    \r\n    &.is-checked .el-radio__inner {\r\n      background-color: #f24545;\r\n      border-color: #f24545;\r\n    }\r\n  }\r\n  \r\n  .el-radio__label {\r\n    color: #f56c6c;\r\n    font-weight: 500;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-radio-group v-bind=\"mergedAttrs\" :popper-class=\"computedPopperClass\" class=\"m-radio-group\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-radio-group>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, useAttrs } from 'vue'\r\n\r\ndefineOptions({\r\n  name: 'MRadioGroup'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 获取attrs\r\nconst attrs = useAttrs()\r\n\r\n// 计算popper-class，合并默认类名和外部传入的类名\r\nconst computedPopperClass = computed(() => {\r\n  const defaultPopperClass = 'mc-radio-group-popper'\r\n  \r\n  if (attrs.popperClass) {\r\n    return `${defaultPopperClass} ${attrs.popperClass}`.trim()\r\n  }\r\n  \r\n  return defaultPopperClass\r\n})\r\n\r\n// 合并其他属性（排除popperClass）\r\nconst mergedAttrs = computed(() => {\r\n  const { popperClass, ...otherAttrs } = attrs\r\n  return otherAttrs\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// RadioGroup popper-class 样式\r\n.mc-radio-group-popper {\r\n  // 自定义单选框组样式可以在这里添加\r\n}\r\n\r\n// 自定义主题示例\r\n.mc-radio-group-custom {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background: linear-gradient(45deg, #667eea, #764ba2);\r\n        border-color: #667eea;\r\n        \r\n        &:hover {\r\n          background: linear-gradient(45deg, #5a6fd8, #6a4190);\r\n          border-color: #5a6fd8;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background: linear-gradient(45deg, #4c63d2, #5d3a7e);\r\n        border-color: #4c63d2;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #667eea;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n\r\n.mc-radio-group-success {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background-color: #67c23a;\r\n        border-color: #67c23a;\r\n        \r\n        &:hover {\r\n          background-color: #5daf34;\r\n          border-color: #5daf34;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background-color: #529b2e;\r\n        border-color: #529b2e;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #67c23a;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n\r\n.mc-radio-group-warning {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background-color: #e6a23c;\r\n        border-color: #e6a23c;\r\n        \r\n        &:hover {\r\n          background-color: #d4922b;\r\n          border-color: #d4922b;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background-color: #c8951f;\r\n        border-color: #c8951f;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #e6a23c;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n\r\n.mc-radio-group-danger {\r\n  .el-radio {\r\n    .el-radio__input {\r\n      .el-radio__inner {\r\n        background-color: #f56c6c;\r\n        border-color: #f56c6c;\r\n        \r\n        &:hover {\r\n          background-color: #f45454;\r\n          border-color: #f45454;\r\n        }\r\n      }\r\n      \r\n      &.is-checked .el-radio__inner {\r\n        background-color: #f24545;\r\n        border-color: #f24545;\r\n      }\r\n    }\r\n    \r\n    .el-radio__label {\r\n      color: #f56c6c;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-radio-button v-bind=\"mergedAttrs\" class=\"m-radio-button\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-radio-button>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\"\r\n\r\ndefineOptions({\r\n  name: 'MRadioButton'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } = useClassName('mc-radio-button-popper')\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// RadioButton popper-class 样式\r\n// .mc-radio-button-popper {\r\n//   自定义单选框按钮样式可以在这里添加\r\n// }\r\n\r\n// 自定义主题示例\r\n.mc-radio-button-custom {\r\n  .el-radio-button__inner {\r\n    background: linear-gradient(45deg, #667eea, #764ba2);\r\n    border-color: #667eea;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background: linear-gradient(45deg, #5a6fd8, #6a4190);\r\n      border-color: #5a6fd8;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background: linear-gradient(45deg, #4c63d2, #5d3a7e);\r\n    border-color: #4c63d2;\r\n    box-shadow: -1px 0 0 0 #4c63d2;\r\n  }\r\n}\r\n\r\n.mc-radio-button-success {\r\n  .el-radio-button__inner {\r\n    background-color: #67c23a;\r\n    border-color: #67c23a;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background-color: #5daf34;\r\n      border-color: #5daf34;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background-color: #529b2e;\r\n    border-color: #529b2e;\r\n    box-shadow: -1px 0 0 0 #529b2e;\r\n  }\r\n}\r\n\r\n.mc-radio-button-warning {\r\n  .el-radio-button__inner {\r\n    background-color: #e6a23c;\r\n    border-color: #e6a23c;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background-color: #d4922b;\r\n      border-color: #d4922b;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background-color: #c8951f;\r\n    border-color: #c8951f;\r\n    box-shadow: -1px 0 0 0 #c8951f;\r\n  }\r\n}\r\n\r\n.mc-radio-button-danger {\r\n  .el-radio-button__inner {\r\n    background-color: #f56c6c;\r\n    border-color: #f56c6c;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background-color: #f45454;\r\n      border-color: #f45454;\r\n    }\r\n  }\r\n  \r\n  .el-radio-button__original-radio:checked + .el-radio-button__inner {\r\n    background-color: #f24545;\r\n    border-color: #f24545;\r\n    box-shadow: -1px 0 0 0 #f24545;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-switch v-bind=\"mergedAttrs\" :popper-class=\"popperClass\" class=\"m-switch\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-switch>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\"\r\n\r\ndefineOptions({\r\n  name: 'MSwitch'\r\n})\r\n\r\n// 定义props\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\n\r\n// 使用类名 Hook\r\nconst { mergedAttrs, className: popperClass } = useClassName('mc-switch-popper')\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// Switch popper-class 样式\r\n// .mc-switch-popper {\r\n//   自定义开关样式可以在这里添加\r\n// }\r\n\r\n// 自定义主题示例\r\n.mc-switch-custom {\r\n  .el-switch__core {\r\n    background: linear-gradient(45deg, #667eea, #764ba2);\r\n    border-color: #667eea;\r\n    \r\n    &:after {\r\n      background: white;\r\n    }\r\n  }\r\n  \r\n  &.is-checked .el-switch__core {\r\n    background: linear-gradient(45deg, #4c63d2, #5d3a7e);\r\n    border-color: #4c63d2;\r\n  }\r\n}\r\n\r\n.mc-switch-success {\r\n  .el-switch__core {\r\n    background-color: #67c23a;\r\n    border-color: #67c23a;\r\n    \r\n    &:after {\r\n      background: white;\r\n    }\r\n  }\r\n  \r\n  &.is-checked .el-switch__core {\r\n    background-color: #529b2e;\r\n    border-color: #529b2e;\r\n  }\r\n}\r\n\r\n.mc-switch-warning {\r\n  .el-switch__core {\r\n    background-color: #e6a23c;\r\n    border-color: #e6a23c;\r\n    \r\n    &:after {\r\n      background: white;\r\n    }\r\n  }\r\n  \r\n  &.is-checked .el-switch__core {\r\n    background-color: #c8951f;\r\n    border-color: #c8951f;\r\n  }\r\n}\r\n\r\n.mc-switch-danger {\r\n  .el-switch__core {\r\n    background-color: #f56c6c;\r\n    border-color: #f56c6c;\r\n    \r\n    &:after {\r\n      background: white;\r\n    }\r\n  }\r\n  \r\n  &.is-checked .el-switch__core {\r\n    background-color: #f24545;\r\n    border-color: #f24545;\r\n  }\r\n}\r\n\r\n// 特殊样式变体\r\n.mc-switch-gradient {\r\n  .el-switch__core {\r\n    background: linear-gradient(90deg, #ff6b6b, #4ecdc4);\r\n    border: none;\r\n    \r\n    &:after {\r\n      background: white;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    }\r\n  }\r\n  \r\n  &.is-checked .el-switch__core {\r\n    background: linear-gradient(90deg, #4ecdc4, #45b7d1);\r\n  }\r\n}\r\n\r\n.mc-switch-neon {\r\n  .el-switch__core {\r\n    background-color: #1a1a1a;\r\n    border: 2px solid #00ffff;\r\n    box-shadow: 0 0 10px #00ffff;\r\n    \r\n    &:after {\r\n      background: #00ffff;\r\n      box-shadow: 0 0 5px #00ffff;\r\n    }\r\n  }\r\n  \r\n  &.is-checked .el-switch__core {\r\n    background-color: #00ffff;\r\n    border-color: #00ffff;\r\n    box-shadow: 0 0 15px #00ffff;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-tag v-bind=\"$attrs\" class=\"m-tag\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-tag>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MTag'\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","<template>\r\n  <el-alert v-bind=\"mergedAttrs\" class=\"mc-alert\">\r\n    <!-- 自定义图标插槽 -->\r\n    <template v-if=\"iconUrl\" #icon>\r\n      <img :src=\"iconUrl\" :alt=\"`${type} icon`\" class=\"mc-alert-icon\" />\r\n    </template>\r\n    \r\n    <!-- 其他插槽 -->\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-alert>\r\n</template>\r\n\r\n<script>\r\n// 定义可选的Alert类型\r\nconst availableTypes = ['success', 'warning', 'error']\r\n\r\nexport default {\r\n  name: 'MAlert'\r\n}\r\n</script>\r\n\r\n<script setup>\r\nimport { computed, useAttrs } from 'vue'\r\n\r\nconst props = defineProps({\r\n  type: {\r\n    type: String,\r\n    default: 'success',\r\n    validator: (value) => availableTypes.includes(value)\r\n  },\r\n  useCustomIcon: {\r\n    type: Boolean,\r\n    default: true\r\n  }\r\n})\r\n\r\nconst attrs = useAttrs()\r\n\r\n// 排除已处理的属性，确保 type 属性正确传递\r\nconst mergedAttrs = computed(() => {\r\n  const { useCustomIcon, ...rest } = attrs\r\n  return {\r\n    ...rest,\r\n    type: props.type  // 确保 type 属性正确传递给 el-alert\r\n  }\r\n})\r\n\r\n// 计算图标URL\r\nconst iconUrl = computed(() => {\r\n  if (!props.useCustomIcon) {\r\n    return null\r\n  }\r\n  \r\n  return `https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-${props.type}.png`\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.mc-alert.el-alert {\r\n  --el-alert-padding: 14px 16px;\r\n  .mc-alert-icon {\r\n    width: 16px;\r\n    height: 16px;\r\n    object-fit: contain;\r\n  }\r\n  .el-alert__close-btn{\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    opacity: 0.6;\r\n    transition: opacity 0.2s ease;\r\n    border-radius: 50%;\r\n    width: 20px;\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    &:hover {\r\n      opacity: 1;\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n  // Error 类型样式\r\n  &.el-alert--error.is-light {\r\n    background-color: var(--all-red-10);\r\n    color: var(--text-error-primary);\r\n    border-color: var(--all-red-10);\r\n    \r\n    .el-alert__title,\r\n    .el-alert__description,\r\n    .el-alert__close-btn {\r\n      color: var(--text-error-primary);\r\n    }\r\n  \r\n    .el-alert__icon {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n  \r\n  // Warning 类型样式\r\n  &.el-alert--warning.is-light {\r\n    background-color: var(--all-orange-10);\r\n    color: var(--text-warning-primary);\r\n    border-color: var(--all-orange-10);\r\n    \r\n    .el-alert__title,\r\n    .el-alert__description,\r\n    .el-alert__close-btn {\r\n      color: var(--text-warning-primary);\r\n    }\r\n  \r\n    .el-alert__icon {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n  \r\n  // Success 类型样式\r\n  &.el-alert--success.is-light {\r\n    background-color: var(--all-green-10);\r\n    color: var(--all-green-4);\r\n    border-color: var(--all-green-10);\r\n    \r\n    .el-alert__title,\r\n    .el-alert__description,\r\n    .el-alert__close-btn {\r\n      color: var(--all-green-4);\r\n    }\r\n  \r\n    .el-alert__icon {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n}\r\n\r\n</style>","<template>\r\n  <div>\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :width=\"width\"\r\n      :title=\"title\"\r\n      :draggable=\"draggable\"\r\n      :close-on-click-modal=\"closeOnClickModal\"\r\n      :center=\"center\"\r\n      v-bind=\"$attrs\"\r\n      class=\"m-dialog\"\r\n      header-class=\"m-header\"\r\n    >\r\n      <template v-if=\"$slots.header\" #header=\"{ close, titleId, titleClass }\">\r\n        <slot name=\"header\" v-bind=\"{ close, titleId, titleClass }\"></slot>\r\n      </template>\r\n      <slot name=\"default\"></slot>\r\n      <template v-if=\"$slots.footer\" #footer class=\"m-footer\">\r\n        <slot name=\"footer\"></slot>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'MDialog'\r\n})\r\nconst props = defineProps({\r\n  width: {\r\n    type: String,\r\n    default: '440px'\r\n  },\r\n  center: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  draggable: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  closeOnClickModal: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  title: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\nconst emit = defineEmits(['close'])\r\nconst dialogVisible = defineModel('modelValue', {\r\n  type: Boolean,\r\n  default: false\r\n})\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n</style>\r\n","<template>\r\n  <el-notification v-bind=\"$attrs\" class=\"mc-notification\">\r\n    <!-- 其他插槽 -->\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-notification>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MNotification\",\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// Notification 基础样式\r\n// 如需自定义样式，可以在这里添加\r\n</style>\r\n","<template>\r\n  <teleport to=\"body\">\r\n    <transition-group name=\"message\" tag=\"div\" class=\"message-container\">\r\n      <div\r\n        v-for=\"message in messages\"\r\n        :key=\"message.id\"\r\n        :class=\"[\r\n          'custom-message',\r\n          `message-${message.type}`,\r\n          `message-${message.placement}`,\r\n          { 'message-plain': message.plain }\r\n        ]\"\r\n      >\r\n        <!-- 图标 -->\r\n        <div v-if=\"message.showIcon\" class=\"message-icon\">\r\n          <img \r\n            v-if=\"message.customIcon\"\r\n            :src=\"message.customIcon\"\r\n            alt=\"custom icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n          <img \r\n            v-else-if=\"message.type === 'success'\"\r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-success.png\"\r\n            alt=\"success icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n          <img \r\n            v-else-if=\"message.type === 'warning'\"\r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-warning.png\"\r\n            alt=\"warning icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n          <img \r\n            v-else-if=\"message.type === 'error'\"\r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/mc-ui/alert/alert-error.png\"\r\n            alt=\"error icon\"\r\n            class=\"message-icon-img\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 消息内容 -->\r\n        <div class=\"message-content\">\r\n          <component \r\n            v-if=\"typeof message.message === 'function'\"\r\n            :is=\"message.message\"\r\n          />\r\n          <div \r\n            v-else-if=\"message.dangerouslyUseHTMLString\"\r\n            v-html=\"message.message\"\r\n          />\r\n          <span v-else>{{ message.message }}</span>\r\n          \r\n          <!-- 重复数量 -->\r\n          <span v-if=\"message.repeatNum > 1\" class=\"message-repeat\">\r\n            {{ message.repeatNum }}\r\n          </span>\r\n        </div>\r\n\r\n        <!-- 关闭按钮 -->\r\n        <button \r\n          v-if=\"message.showClose\"\r\n          class=\"message-close\"\r\n          @click=\"closeMessage(message.id)\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n    </transition-group>\r\n  </teleport>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\n\r\n// 全局消息列表\r\nconst messages = ref([])\r\nlet messageId = 0\r\n\r\n// 创建 Message 静态方法对象\r\nconst Message = {\r\n  // 默认配置\r\n  defaultOptions: {\r\n    message: '',\r\n    type: 'success',\r\n    plain: false,\r\n    customIcon: '',\r\n    dangerouslyUseHTMLString: false,\r\n    customClass: '',\r\n    duration: 3000,\r\n    showClose: false,\r\n    showIcon: true,\r\n    onClose: null,\r\n    offset: 16,\r\n    placement: 'top',\r\n    appendTo: 'body',\r\n    grouping: false,\r\n    repeatNum: 1\r\n  },\r\n\r\n  // 显示消息\r\n  show(options = {}) {\r\n    // 如果是字符串，转换为配置对象\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n\r\n    const config = {\r\n      ...this.defaultOptions,\r\n      ...options,\r\n      id: ++messageId\r\n    }\r\n\r\n    // 分组处理\r\n    if (config.grouping) {\r\n      const existingIndex = messages.value.findIndex(\r\n        m => m.message === config.message && m.type === config.type && m.grouping\r\n      )\r\n      \r\n      if (existingIndex > -1) {\r\n        messages.value[existingIndex].repeatNum++\r\n        return { close: () => this.close(messages.value[existingIndex].id) }\r\n      }\r\n    }\r\n\r\n    // 添加到消息列表\r\n    messages.value.push(config)\r\n\r\n    // 如果设置了自动关闭时间，则自动关闭\r\n    if (config.duration > 0) {\r\n      setTimeout(() => {\r\n        this.close(config.id)\r\n      }, config.duration)\r\n    }\r\n\r\n    return {\r\n      close: () => this.close(config.id)\r\n    }\r\n  },\r\n\r\n  // 关闭指定消息\r\n  close(id) {\r\n    const index = messages.value.findIndex(m => m.id === id)\r\n    if (index > -1) {\r\n      const message = messages.value[index]\r\n      if (message.onClose) {\r\n        message.onClose(message)\r\n      }\r\n      messages.value.splice(index, 1)\r\n    }\r\n  },\r\n\r\n  // 关闭所有消息\r\n  closeAll() {\r\n    messages.value = []\r\n  },\r\n\r\n  // 便捷方法\r\n  success(options = {}) {\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n    return this.show({ ...options, type: 'success' })\r\n  },\r\n\r\n  warning(options = {}) {\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n    return this.show({ ...options, type: 'warning' })\r\n  },\r\n\r\n  error(options = {}) {\r\n    if (typeof options === 'string') {\r\n      options = { message: options }\r\n    }\r\n    return this.show({ ...options, type: 'error' })\r\n  }\r\n}\r\n\r\n// 关闭消息的方法\r\nconst closeMessage = (id) => {\r\n  Message.close(id)\r\n}\r\n\r\n// Vue 组件定义\r\nexport default {\r\n  name: 'MMessage',\r\n  setup() {\r\n    return {\r\n      messages,\r\n      closeMessage\r\n    }\r\n  }\r\n}\r\n\r\n// 导出类供直接使用\r\nexport { Message }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.message-container {\r\n  position: fixed;\r\n  z-index: 9999;\r\n  pointer-events: none;\r\n}\r\n\r\n.custom-message {\r\n  position: fixed;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  min-width: 200px;\r\n  max-width: 320px;\r\n  padding: 12px 16px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  pointer-events: auto;\r\n  z-index: 9999;\r\n  font-size: 14px;\r\n  \r\n  // 位置控制\r\n  &.message-top {\r\n    top: 20px;\r\n    \r\n    &:nth-child(2) { top: 70px; }\r\n    &:nth-child(3) { top: 120px; }\r\n    &:nth-child(4) { top: 170px; }\r\n    &:nth-child(5) { top: 220px; }\r\n  }\r\n  \r\n  &.message-top-left {\r\n    top: 20px;\r\n    left: 20px;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { top: 70px; }\r\n    &:nth-child(3) { top: 120px; }\r\n    &:nth-child(4) { top: 170px; }\r\n    &:nth-child(5) { top: 220px; }\r\n  }\r\n  \r\n  &.message-top-right {\r\n    top: 20px;\r\n    right: 20px;\r\n    left: auto;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { top: 70px; }\r\n    &:nth-child(3) { top: 120px; }\r\n    &:nth-child(4) { top: 170px; }\r\n    &:nth-child(5) { top: 220px; }\r\n  }\r\n  \r\n  &.message-bottom {\r\n    bottom: 20px;\r\n    top: auto;\r\n    \r\n    &:nth-child(2) { bottom: 70px; }\r\n    &:nth-child(3) { bottom: 120px; }\r\n    &:nth-child(4) { bottom: 170px; }\r\n    &:nth-child(5) { bottom: 220px; }\r\n  }\r\n  \r\n  &.message-bottom-left {\r\n    bottom: 20px;\r\n    left: 20px;\r\n    top: auto;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { bottom: 70px; }\r\n    &:nth-child(3) { bottom: 120px; }\r\n    &:nth-child(4) { bottom: 170px; }\r\n    &:nth-child(5) { bottom: 220px; }\r\n  }\r\n  \r\n  &.message-bottom-right {\r\n    bottom: 20px;\r\n    right: 20px;\r\n    left: auto;\r\n    top: auto;\r\n    transform: none;\r\n    \r\n    &:nth-child(2) { bottom: 70px; }\r\n    &:nth-child(3) { bottom: 120px; }\r\n    &:nth-child(4) { bottom: 170px; }\r\n    &:nth-child(5) { bottom: 220px; }\r\n  }\r\n  \r\n  .message-icon {\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    .message-icon-img {\r\n      width: 16px;\r\n      height: 16px;\r\n      object-fit: contain;\r\n    }\r\n  }\r\n  \r\n  .message-content {\r\n    flex: 1;\r\n    line-height: 1.4;\r\n    position: relative;\r\n    \r\n    .message-repeat {\r\n      position: absolute;\r\n      top: -8px;\r\n      right: -8px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background: #666;\r\n      color: white;\r\n      font-size: 10px;\r\n      font-weight: bold;\r\n      min-width: 16px;\r\n      height: 16px;\r\n      padding: 0 4px;\r\n      border-radius: 8px;\r\n      border: 2px solid white;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    }\r\n  }\r\n  \r\n  .message-close {\r\n    flex-shrink: 0;\r\n    border: none;\r\n    background: transparent;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 4px;\r\n    margin-left: 8px;\r\n    opacity: 0.6;\r\n    transition: opacity 0.2s ease;\r\n    font-size: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    color: var(--icon-tertiary, #999);\r\n    \r\n    &:hover {\r\n      opacity: 1;\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n  \r\n  // 不同类型的样式 - 统一使用 bg-tertiary-hover 背景\r\n  &.message-success {\r\n    background-color: var(--bg-tertiary-hover, #f5f5f5);\r\n    color: var(--all-green-4, #67c23a);\r\n    border: 1px solid var(--bg-tertiary-hover, #f5f5f5);\r\n    \r\n    .message-icon {\r\n      color: var(--all-green-4, #67c23a);\r\n    }\r\n    \r\n    .message-repeat {\r\n      background: var(--all-green-4, #67c23a);\r\n      border-color: var(--all-green-4, #67c23a);\r\n    }\r\n    \r\n    &.message-plain {\r\n      background: var(--all-green-4, #67c23a);\r\n      border: 1px solid var(--all-green-4, #67c23a);\r\n      color: #fff;\r\n      \r\n      .message-icon {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  \r\n  &.message-warning {\r\n    background-color: var(--bg-tertiary-hover, #f5f5f5);\r\n    color: var(--text-warning-primary, #e6a23c);\r\n    border: 1px solid var(--bg-tertiary-hover, #f5f5f5);\r\n    \r\n    .message-icon {\r\n      color: var(--text-warning-primary, #e6a23c);\r\n    }\r\n    \r\n    .message-repeat {\r\n      background: var(--text-warning-primary, #e6a23c);\r\n      border-color: var(--text-warning-primary, #e6a23c);\r\n    }\r\n    \r\n    &.message-plain {\r\n      background: var(--text-warning-primary, #e6a23c);\r\n      border: 1px solid var(--text-warning-primary, #e6a23c);\r\n      color: #fff;\r\n      \r\n      .message-icon {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n  \r\n  &.message-error {\r\n    background-color: var(--bg-tertiary-hover, #f5f5f5);\r\n    color: var(--text-error-primary, #f56c6c);\r\n    border: 1px solid var(--bg-tertiary-hover, #f5f5f5);\r\n    \r\n    .message-icon {\r\n      color: var(--text-error-primary, #f56c6c);\r\n    }\r\n    \r\n    .message-repeat {\r\n      background: var(--text-error-primary, #f56c6c);\r\n      border-color: var(--text-error-primary, #f56c6c);\r\n    }\r\n    \r\n    &.message-plain {\r\n      background: var(--text-error-primary, #f56c6c);\r\n      border: 1px solid var(--text-error-primary, #f56c6c);\r\n      color: #fff;\r\n      \r\n      .message-icon {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 动画效果\r\n.message-enter-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.message-leave-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.message-enter-from {\r\n  opacity: 0;\r\n  transform: translateX(-50%) translateY(-20px);\r\n}\r\n\r\n.message-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(-50%) translateY(-20px);\r\n}\r\n\r\n.message-move {\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n// 不同位置的动画\r\n.message-top-left {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(-20px);\r\n  }\r\n}\r\n\r\n.message-top-right {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(20px);\r\n  }\r\n}\r\n\r\n.message-bottom {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(-50%) translateY(20px);\r\n  }\r\n}\r\n\r\n.message-bottom-left {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(-20px);\r\n  }\r\n}\r\n\r\n.message-bottom-right {\r\n  &.message-enter-from,\r\n  &.message-leave-to {\r\n    transform: translateX(20px);\r\n  }\r\n}\r\n\r\n// 响应式设计\r\n@media (max-width: 480px) {\r\n  .custom-message {\r\n    min-width: calc(100vw - 40px);\r\n    max-width: calc(100vw - 40px);\r\n    left: 20px !important;\r\n    right: 20px !important;\r\n    transform: none !important;\r\n    \r\n    &.message-enter-from,\r\n    &.message-leave-to {\r\n      transform: translateY(-20px) !important;\r\n    }\r\n  }\r\n}\r\n</style>","<template>\r\n  <teleport to=\"body\">\r\n    <transition-group name=\"notification\" tag=\"div\" class=\"notification-container\">\r\n      <div\r\n        v-for=\"notification in notifications\"\r\n        :key=\"notification.id\"\r\n        :class=\"[\r\n          'custom-notification',\r\n          `notification-${notification.position}`\r\n        ]\"\r\n      >\r\n        <!-- 图标 -->\r\n        <div class=\"notification-icon\">\r\n          <img \r\n            src=\"https://cfdsaas-pre.oss-cn-hongkong.aliyuncs.com/mc-assets/MCImages/userCenter/icon-quota-tip.png\" \r\n            alt=\"notification icon\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 内容区域 -->\r\n        <div class=\"notification-content\">\r\n          <!-- 标题 -->\r\n          <div class=\"notification-title\">{{ notification.title }}</div>\r\n          \r\n          <!-- 消息内容 -->\r\n          <div class=\"notification-message\">{{ notification.message }}</div>\r\n          \r\n          <!-- 自定义插槽内容 -->\r\n          <div v-if=\"notification.slotContent\" class=\"notification-action\">\r\n            <component :is=\"notification.slotContent\" />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 关闭按钮 -->\r\n        <button \r\n          v-if=\"notification.showClose\"\r\n          class=\"notification-close\"\r\n          @click=\"closeNotification(notification.id)\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n    </transition-group>\r\n  </teleport>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\n\r\n// 全局通知列表\r\nconst notifications = ref([])\r\nlet notificationId = 0\r\n\r\n// 创建 NotifiMessage 静态方法对象\r\nconst NotifiMessage = {\r\n  // 默认配置\r\n  defaultOptions: {\r\n    title: '',\r\n    message: '',\r\n    duration: 4500,\r\n    position: 'top-right',\r\n    showClose: true,\r\n    offset: 20\r\n  },\r\n\r\n  // 显示通知\r\n  show(options = {}) {\r\n    const config = {\r\n      ...this.defaultOptions,\r\n      ...options,\r\n      id: ++notificationId\r\n    }\r\n\r\n    // 添加到通知列表\r\n    notifications.value.push(config)\r\n\r\n    // 如果设置了自动关闭时间，则自动关闭\r\n    if (config.duration > 0) {\r\n      setTimeout(() => {\r\n        this.close(config.id)\r\n      }, config.duration)\r\n    }\r\n\r\n    return {\r\n      close: () => this.close(config.id)\r\n    }\r\n  },\r\n\r\n  // 关闭指定通知\r\n  close(id) {\r\n    const index = notifications.value.findIndex(n => n.id === id)\r\n    if (index > -1) {\r\n      notifications.value.splice(index, 1)\r\n    }\r\n  },\r\n\r\n  // 关闭所有通知\r\n  closeAll() {\r\n    notifications.value = []\r\n  },\r\n\r\n  // 便捷方法\r\n  success(options = {}) {\r\n    return this.show(options)\r\n  },\r\n\r\n  warning(options = {}) {\r\n    return this.show(options)\r\n  },\r\n\r\n  error(options = {}) {\r\n    return this.show(options)\r\n  }\r\n}\r\n\r\n// 关闭通知的方法\r\nconst closeNotification = (id) => {\r\n  const index = notifications.value.findIndex(n => n.id === id)\r\n  if (index > -1) {\r\n    notifications.value.splice(index, 1)\r\n  }\r\n}\r\n\r\n\r\n// Vue 组件定义\r\nexport default {\r\n  name: 'MNotifiMessage',\r\n  setup() {\r\n    return {\r\n      notifications,\r\n      closeNotification\r\n    }\r\n  }\r\n}\r\n\r\n// 导出类供直接使用\r\nexport { NotifiMessage }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.notification-container {\r\n  position: fixed;\r\n  z-index: 9999;\r\n  pointer-events: none;\r\n}\r\n\r\n.custom-notification {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 400px;\r\n  background: #201F24;\r\n  border-radius: 12px;\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 4px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\r\n  pointer-events: auto;\r\n  z-index: 9999;\r\n  \r\n  // 多个通知的堆叠效果\r\n  &:nth-child(2) { top: 100px; }\r\n  &:nth-child(3) { top: 180px; }\r\n  &:nth-child(4) { top: 260px; }\r\n  &:nth-child(5) { top: 340px; }\r\n  \r\n  .notification-icon {\r\n    flex-shrink: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    transform: translate(-9px, -8px);\r\n    \r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: contain;\r\n    }\r\n  }\r\n  \r\n  .notification-content {\r\n    flex: 1;\r\n    \r\n    .notification-title {\r\n      color: #FFFFFF;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n      margin-bottom: 8px;\r\n    }\r\n    \r\n    .notification-message {\r\n      color: rgba(255, 255, 255, 0.8);\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n      margin-bottom: 16px;\r\n    }\r\n    \r\n    .notification-action {\r\n      .custom-action-link {\r\n        color: #FFD905;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 6px;\r\n        transition: all 0.2s ease;\r\n        \r\n        &:hover {\r\n          color: #FFF;\r\n        }\r\n        \r\n        span {\r\n          line-height: 1;\r\n        }\r\n        \r\n        .arrow {\r\n          transition: transform 0.2s ease;\r\n          display: flex;\r\n          align-items: center;\r\n          line-height: 1;\r\n        }\r\n        \r\n        &:hover .arrow {\r\n          transform: translateX(2px);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .notification-close {\r\n    position: absolute;\r\n    top: 12px;\r\n    right: 12px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: none;\r\n    background: transparent;\r\n    color: var(--icon-tertiary, #999);\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n    line-height: 1;\r\n    opacity: 0.6;\r\n    transition: opacity 0.2s ease;\r\n    \r\n    &:hover {\r\n      opacity: 1;\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n}\r\n\r\n// 动画效果\r\n.notification-enter-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.notification-leave-active {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.notification-enter-from {\r\n  opacity: 0;\r\n  transform: translateX(100%);\r\n}\r\n\r\n.notification-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(100%);\r\n}\r\n\r\n.notification-move {\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n// 响应式设计\r\n@media (max-width: 480px) {\r\n  .custom-notification {\r\n    width: calc(100vw - 40px);\r\n    left: 20px !important;\r\n    right: 20px !important;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-date-picker v-bind=\"mergedAttrs\" :popper-class=\"popperClass\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-date-picker>\r\n</template>\r\n\r\n<script setup>\r\nimport { useClassName } from \"@packages/hooks/useClassName.js\";\r\n\r\ndefineOptions({\r\n  name: \"MDatePicker\",\r\n});\r\n\r\n// 定义 props，提供默认的 type 值\r\nconst props = defineProps({\r\n  popperClass: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n});\r\n\r\n// 使用类名 Hook，排除 type 和 popperClass 属性\r\nconst { mergedAttrs, className: popperClass } = useClassName(\r\n  \"mc-datepicker-popper\",\r\n  \"popperClass\"\r\n);\r\n</script>\r\n<style lang=\"scss\">\r\n.mc-datepicker-popper {\r\n  .el-picker-panel {\r\n    border: 1px solid var(--border-primary);\r\n    border-radius: 6px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    .current,\r\n    // .today:not(.in-range),\r\n    .start-date,\r\n    .end-date {\r\n      .el-date-table-cell {\r\n        .el-date-table-cell__text {\r\n          color: var(--text-quaternary);\r\n          border-radius: 3px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .start-date {\r\n      .el-date-table-cell {\r\n        border-top-left-radius: 3px;\r\n        border-bottom-left-radius: 3px;\r\n      }\r\n    }\r\n\r\n    .end-date {\r\n      .el-date-table-cell {\r\n        border-top-right-radius: 3px;\r\n        border-bottom-right-radius: 3px;\r\n      }\r\n    }\r\n\r\n    .el-button.is-text {\r\n      color: var(--text-brand);\r\n    }\r\n    .el-button.is-plain {\r\n      background: var(--bg-brand);\r\n      color: var(--text-quaternary);\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-empty v-bind=\"mergedAttrs\" :image=\"imageUrl\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-empty>\r\n</template>\r\n\r\n<script>\r\n// 定义可选的图片文件名（在模块作用域中）\r\nconst availableImages = [\r\n  '404',\r\n  'billing', \r\n  'cart',\r\n  'comments',\r\n  'dashboard',\r\n  'files',\r\n  'inbox',\r\n  'location',\r\n  'network',\r\n  'notifications',\r\n  'orders',\r\n  'records',\r\n  'session',\r\n  'subscription',\r\n  'todo',\r\n  'wishlist'\r\n]\r\n\r\nexport default {\r\n  name: 'MEmpty'\r\n}\r\n</script>\r\n\r\n<script setup>\r\nimport { computed, useAttrs } from 'vue'\r\n\r\nconst props = defineProps({\r\n  image: {\r\n    type: String,\r\n    default: 'orders',\r\n    validator: (value) => {\r\n      // 如果是完整的URL或路径，直接通过验证\r\n      if (value.includes('/') || value.includes('http')) {\r\n        return true\r\n      }\r\n      // 否则检查是否在可选列表中\r\n      return availableImages.includes(value)\r\n    }\r\n  }\r\n})\r\n\r\nconst attrs = useAttrs()\r\n\r\n// 排除 image 属性，避免重复绑定\r\nconst mergedAttrs = computed(() => {\r\n  const { image, ...rest } = attrs\r\n  return rest\r\n})\r\n\r\n// 计算图片URL\r\nconst imageUrl = computed(() => {\r\n  const { image } = props\r\n  \r\n  // 如果是完整的URL或路径，直接返回\r\n  if (image.includes('/') || image.includes('http')) {\r\n    return image\r\n  }\r\n  \r\n  // 使用 public 目录中的图片\r\n  // Vite 会自动处理 public 目录中的静态资源\r\n  return `/images/empty/${image}.png`\r\n})\r\n</script>\r\n","<template>\r\n  <el-table v-bind=\"$attrs\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-table>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: \"MTable\",\r\n});\r\n</script>\r\n<style lang=\"scss\">\r\n// Table 组件样式 - 无边框设计\r\n\r\n</style>\r\n","<template>\r\n  <el-table-column v-bind=\"$attrs\" class=\"m-table-column\">\r\n    <template v-for=\"(_, name) in $slots\" :key=\"name\" #[name]>\r\n      <slot :name=\"name\" />\r\n    </template>\r\n  </el-table-column>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: \"MTableColumn\",\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// TableColumn 组件样式\r\n.m-table-column.el-table-column {\r\n  // 继承父级 Table 组件的样式\r\n}\r\n</style>\r\n","<template>\r\n  <div \r\n    v-if=\"visible\" \r\n    class=\"m-banner\"\r\n    :class=\"[\r\n      `m-banner--${type}`,\r\n      {\r\n        'm-banner--closable': closable,\r\n        'm-banner--with-icon': icon || slots.icon\r\n      }\r\n    ]\"\r\n    :style=\"bannerStyle\"\r\n  >\r\n    <div class=\"m-banner__content\">\r\n      <!-- 图标插槽 -->\r\n      <div v-if=\"icon || slots.icon\" class=\"m-banner__icon\">\r\n        <slot name=\"icon\">\r\n          <m-icon :name=\"icon\" :size=\"iconSize\" />\r\n        </slot>\r\n      </div>\r\n      \r\n      <!-- 主要内容 -->\r\n      <div class=\"m-banner__text\">\r\n        <slot>{{ content }}</slot>\r\n      </div>\r\n      \r\n      <!-- 关闭按钮 -->\r\n      <div v-if=\"closable\" class=\"m-banner__close\" @click=\"handleClose\">\r\n        <m-icon name=\"lucide-x\" :size=\"closeIconSize\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, useSlots } from 'vue'\r\nimport MIcon from '../Icon/Icon.vue'\r\n\r\n// 获取插槽\r\nconst slots = useSlots()\r\n\r\n// 定义 props\r\nconst props = defineProps({\r\n  // 横幅内容\r\n  content: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 横幅类型\r\n  type: {\r\n    type: String,\r\n    default: 'info',\r\n    validator: (value) => ['info', 'success', 'warning', 'error'].includes(value)\r\n  },\r\n  // 是否可关闭\r\n  closable: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  // 是否显示\r\n  visible: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  // 图标名称\r\n  icon: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 图标大小\r\n  iconSize: {\r\n    type: [String, Number],\r\n    default: '16px'\r\n  },\r\n  // 关闭图标大小\r\n  closeIconSize: {\r\n    type: [String, Number],\r\n    default: '16px'\r\n  },\r\n  // 自定义背景色\r\n  backgroundColor: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 自定义文字颜色\r\n  textColor: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 自定义边框颜色\r\n  borderColor: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 持续时间（毫秒），0 表示不自动关闭\r\n  duration: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n})\r\n\r\n// 定义 emits\r\nconst emit = defineEmits(['close', 'update:visible'])\r\n\r\n// 响应式数据\r\nconst internalVisible = ref(props.visible)\r\n\r\n// 监听 visible prop 变化\r\nwatch(() => props.visible, (newVal) => {\r\n  internalVisible.value = newVal\r\n})\r\n\r\n// 计算样式\r\nconst bannerStyle = computed(() => {\r\n  const style = {}\r\n  \r\n  if (props.backgroundColor) {\r\n    style.backgroundColor = props.backgroundColor\r\n  }\r\n  if (props.textColor) {\r\n    style.color = props.textColor\r\n  }\r\n  if (props.borderColor) {\r\n    style.borderColor = props.borderColor\r\n  }\r\n  \r\n  return style\r\n})\r\n\r\n// 默认图标映射\r\nconst defaultIcons = {\r\n  info: 'info',\r\n  success: 'check-circle',\r\n  warning: 'warning',\r\n  error: 'close-circle'\r\n}\r\n\r\n// 计算实际使用的图标\r\nconst actualIcon = computed(() => {\r\n  return props.icon || defaultIcons[props.type]\r\n})\r\n\r\n// 处理关闭\r\nconst handleClose = () => {\r\n  internalVisible.value = false\r\n  emit('update:visible', false)\r\n  emit('close')\r\n}\r\n\r\n// 自动关闭逻辑\r\nwatch(internalVisible, (newVal) => {\r\n  if (newVal && props.duration > 0) {\r\n    setTimeout(() => {\r\n      handleClose()\r\n    }, props.duration)\r\n  }\r\n})\r\n\r\n// 定义组件名称\r\ndefineOptions({\r\n  name: 'MBanner'\r\n})\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n  close: handleClose\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.m-banner {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 40px;\r\n  border-radius: 4px;\r\n  border: 1px solid;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  padding: 10px;\r\n  transition: all 0.3s ease;\r\n\r\n  &__content {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    flex: 1;\r\n  }\r\n\r\n  &__icon {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 8px;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  &__text {\r\n    flex: 1;\r\n    word-break: break-word;\r\n  }\r\n\r\n  &__close {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: 8px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n    border-radius: 3px;\r\n    transition: background-color 0.2s ease;\r\n    flex-shrink: 0;\r\n    min-width: 20px;\r\n    min-height: 20px;\r\n    opacity: 0.7;\r\n\r\n    &:hover {\r\n      background-color: rgba(0, 0, 0, 0.1);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  // 类型样式\r\n  &--info {\r\n    background-color: #e1f3ff;\r\n    border-color: #b3d8ff;\r\n    color: #0066cc;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(0, 102, 204, 0.1);\r\n    }\r\n  }\r\n\r\n  &--success {\r\n    background-color: #f0f9ff;\r\n    border-color: #b3e5b3;\r\n    color: #00a854;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(0, 168, 84, 0.1);\r\n    }\r\n  }\r\n\r\n  &--warning {\r\n    background-color: #fff7e6;\r\n    border-color: #ffd591;\r\n    color: #fa8c16;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(250, 140, 22, 0.1);\r\n    }\r\n  }\r\n\r\n  &--error {\r\n    background-color: #fff2f0;\r\n    border-color: #ffccc7;\r\n    color: #ff4d4f;\r\n\r\n    .m-banner__close:hover {\r\n      background-color: rgba(255, 77, 79, 0.1);\r\n    }\r\n  }\r\n\r\n  // 带动画的关闭\r\n  &.m-banner-leave-active {\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n    transition: opacity 0.3s ease, transform 0.3s ease;\r\n  }\r\n}\r\n\r\n// 深色主题适配\r\n@media (prefers-color-scheme: dark) {\r\n  .m-banner {\r\n    &--info {\r\n      background-color: rgba(24, 144, 255, 0.1);\r\n      border-color: rgba(24, 144, 255, 0.3);\r\n      color: #69c0ff;\r\n    }\r\n\r\n    &--success {\r\n      background-color: rgba(82, 196, 26, 0.1);\r\n      border-color: rgba(82, 196, 26, 0.3);\r\n      color: #95de64;\r\n    }\r\n\r\n    &--warning {\r\n      background-color: rgba(250, 173, 20, 0.1);\r\n      border-color: rgba(250, 173, 20, 0.3);\r\n      color: #ffd666;\r\n    }\r\n\r\n    &--error {\r\n      background-color: rgba(255, 77, 79, 0.1);\r\n      border-color: rgba(255, 77, 79, 0.3);\r\n      color: #ff7875;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"m-tabs\" :class=\"[`m-tabs--${type}`, `m-tabs--${tabPosition}`]\">\r\n    <div class=\"m-tabs__header\">\r\n      <div class=\"m-tabs__nav\">\r\n        <div\r\n          v-for=\"(tab, index) in tabs\"\r\n          :key=\"tab.name || index\"\r\n          :class=\"[\r\n            'm-tabs__item',\r\n            {\r\n              'm-tabs__item--active': activeName === (tab.name || index),\r\n              'm-tabs__item--disabled': tab.disabled,\r\n              'm-tabs__item--closable': tab.closable\r\n            }\r\n          ]\"\r\n          @click=\"handleTabClick(tab, index)\"\r\n        >\r\n          <span class=\"m-tabs__item-text\">\r\n            <slot v-if=\"tab.$slots?.label\" :name=\"`tab-${tab.name || index}`\" />\r\n            <span v-else>{{ tab.label }}</span>\r\n          </span>\r\n          <span\r\n            v-if=\"tab.closable\"\r\n            class=\"m-tabs__item-close\"\r\n            @click.stop=\"handleTabClose(tab, index)\"\r\n          >\r\n            <m-icon name=\"lucide-x\" :size=\"12\" />\r\n          </span>\r\n        </div>\r\n        \r\n        <!-- 添加按钮 -->\r\n        <div\r\n          v-if=\"addable || editable\"\r\n          class=\"m-tabs__item m-tabs__item--add\"\r\n          @click=\"handleTabAdd\"\r\n        >\r\n          <m-icon name=\"plus\" :size=\"12\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"m-tabs__content\">\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, provide, computed, useSlots, watch, nextTick } from 'vue'\r\nimport MIcon from '../Icon/Icon.vue'\r\n\r\n// 定义 props\r\nconst props = defineProps({\r\n  // 当前激活的标签页\r\n  modelValue: {\r\n    type: [String, Number],\r\n    default: ''\r\n  },\r\n  // 标签页类型\r\n  type: {\r\n    type: String,\r\n    default: '',\r\n    validator: (value) => ['', 'card', 'border-card'].includes(value)\r\n  },\r\n  // 标签位置\r\n  tabPosition: {\r\n    type: String,\r\n    default: 'top',\r\n    validator: (value) => ['top', 'right', 'bottom', 'left'].includes(value)\r\n  },\r\n  // 是否可关闭\r\n  closable: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  // 是否可添加\r\n  addable: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  // 是否可编辑（同时可添加和关闭）\r\n  editable: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  // 标签宽度是否自撑开\r\n  stretch: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  // 切换前的钩子函数\r\n  beforeLeave: {\r\n    type: Function,\r\n    default: null\r\n  }\r\n})\r\n\r\n// 定义 emits\r\nconst emit = defineEmits(['update:modelValue', 'tab-click', 'tab-change', 'tab-remove', 'tab-add', 'edit'])\r\n\r\n// 获取插槽\r\nconst slots = useSlots()\r\n\r\n// 响应式数据\r\nconst tabs = ref([])\r\nconst activeName = ref(props.modelValue)\r\n\r\n// 监听 modelValue 变化\r\nwatch(() => props.modelValue, (newVal) => {\r\n  activeName.value = newVal\r\n})\r\n\r\n// 监听 activeName 变化\r\nwatch(activeName, (newVal) => {\r\n  emit('update:modelValue', newVal)\r\n  emit('tab-change', newVal)\r\n})\r\n\r\n// 提供上下文给子组件\r\nprovide('tabsContext', {\r\n  registerTab: (tab) => {\r\n    const index = tabs.value.findIndex(t => t.name === tab.name)\r\n    if (index >= 0) {\r\n      tabs.value[index] = tab\r\n    } else {\r\n      tabs.value.push(tab)\r\n    }\r\n    \r\n    // 如果没有指定 activeName，默认选中第一个\r\n    if (!activeName.value && tabs.value.length > 0) {\r\n      activeName.value = tabs.value[0].name || 0\r\n    }\r\n  },\r\n  unregisterTab: (name) => {\r\n    const index = tabs.value.findIndex(tab => tab.name === name)\r\n    if (index >= 0) {\r\n      tabs.value.splice(index, 1)\r\n    }\r\n  }\r\n})\r\n\r\n// 处理标签点击\r\nconst handleTabClick = async (tab, index) => {\r\n  if (tab.disabled) return\r\n  \r\n  const tabName = tab.name || index\r\n  \r\n  // 如果点击的是当前激活的标签，直接返回\r\n  if (activeName.value === tabName) return\r\n  \r\n  // 执行 beforeLeave 钩子\r\n  if (props.beforeLeave) {\r\n    try {\r\n      const result = await props.beforeLeave(activeName.value, tabName)\r\n      if (result === false) return\r\n    } catch (error) {\r\n      return\r\n    }\r\n  }\r\n  \r\n  activeName.value = tabName\r\n  emit('tab-click', { name: tabName, index, disabled: tab.disabled })\r\n}\r\n\r\n// 处理标签关闭\r\nconst handleTabClose = (tab, index) => {\r\n  const tabName = tab.name || index\r\n  emit('tab-remove', tabName)\r\n  emit('edit', tabName, 'remove')\r\n}\r\n\r\n// 处理添加标签\r\nconst handleTabAdd = () => {\r\n  emit('tab-add')\r\n  emit('edit', '', 'add')\r\n}\r\n\r\n// 暴露方法给父组件\r\ndefineExpose({\r\n  activeName: computed(() => activeName.value)\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.m-tabs {\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  &--left {\r\n    flex-direction: row;\r\n  }\r\n  \r\n  &--right {\r\n    flex-direction: row-reverse;\r\n  }\r\n  \r\n  &--bottom {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  &__header {\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  &__nav {\r\n    display: flex;\r\n    border-bottom: 1px solid var(--el-border-color);\r\n    position: relative;\r\n    \r\n    .m-tabs--card &,\r\n    .m-tabs--border-card & {\r\n      border-bottom: none;\r\n    }\r\n    \r\n    .m-tabs--left &,\r\n    .m-tabs--right & {\r\n      flex-direction: column;\r\n      border-bottom: none;\r\n      border-right: 1px solid var(--el-border-color);\r\n      width: 120px;\r\n    }\r\n    \r\n    .m-tabs--right & {\r\n      border-right: none;\r\n      border-left: 1px solid var(--el-border-color);\r\n    }\r\n  }\r\n\r\n  &__item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 8px 16px;\r\n    cursor: pointer;\r\n    border: 1px solid transparent;\r\n    border-bottom: none;\r\n    background: transparent;\r\n    color: var(--el-text-color-regular);\r\n    font-size: 14px;\r\n    transition: all 0.3s ease;\r\n    position: relative;\r\n    flex-shrink: 0;\r\n    \r\n    &:hover {\r\n      color: var(--el-color-primary);\r\n    }\r\n    \r\n    &--active {\r\n      color: var(--el-color-primary);\r\n      border-color: var(--el-border-color);\r\n      border-bottom-color: var(--el-bg-color);\r\n      background: var(--el-bg-color);\r\n      \r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: -1px;\r\n        left: 0;\r\n        right: 0;\r\n        height: 2px;\r\n        background: var(--el-color-primary);\r\n      }\r\n    }\r\n    \r\n    &--disabled {\r\n      color: var(--el-text-color-disabled);\r\n      cursor: not-allowed;\r\n      \r\n      &:hover {\r\n        color: var(--el-text-color-disabled);\r\n      }\r\n    }\r\n    \r\n    &--closable {\r\n      padding-right: 24px;\r\n    }\r\n    \r\n    &--add {\r\n      padding: 8px 12px;\r\n      border: 1px dashed var(--el-border-color);\r\n      color: var(--el-text-color-regular);\r\n      \r\n      &:hover {\r\n        color: var(--el-color-primary);\r\n        border-color: var(--el-color-primary);\r\n      }\r\n    }\r\n    \r\n    // 卡片风格\r\n    .m-tabs--card & {\r\n      border: 1px solid var(--el-border-color);\r\n      border-bottom: none;\r\n      margin-right: 2px;\r\n      \r\n      &--active {\r\n        border-bottom-color: var(--el-bg-color);\r\n        background: var(--el-bg-color);\r\n        \r\n        &::after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 边框卡片风格\r\n    .m-tabs--border-card & {\r\n      border: 1px solid var(--el-border-color);\r\n      border-bottom: none;\r\n      margin-right: -1px;\r\n      background: var(--el-fill-color-light);\r\n      \r\n      &--active {\r\n        background: var(--el-bg-color);\r\n        border-bottom-color: var(--el-bg-color);\r\n        \r\n        &::after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 左侧和右侧位置\r\n    .m-tabs--left &,\r\n    .m-tabs--right & {\r\n      border-bottom: 1px solid var(--el-border-color);\r\n      border-right: none;\r\n      \r\n      &--active {\r\n        border-bottom-color: var(--el-border-color);\r\n        border-right-color: var(--el-bg-color);\r\n        \r\n        &::after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n    \r\n    .m-tabs--right & {\r\n      border-bottom: 1px solid var(--el-border-color);\r\n      border-left: none;\r\n      \r\n      &--active {\r\n        border-bottom-color: var(--el-border-color);\r\n        border-left-color: var(--el-bg-color);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__item-text {\r\n    flex: 1;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  &__item-close {\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 50%;\r\n    transition: background-color 0.2s ease;\r\n    \r\n    &:hover {\r\n      background-color: var(--el-fill-color);\r\n    }\r\n  }\r\n\r\n  &__content {\r\n    flex: 1;\r\n    padding: 16px 0;\r\n    \r\n    .m-tabs--card &,\r\n    .m-tabs--border-card & {\r\n      padding: 16px;\r\n      border: 1px solid var(--el-border-color);\r\n      border-top: none;\r\n    }\r\n    \r\n    .m-tabs--border-card & {\r\n      background: var(--el-bg-color);\r\n    }\r\n    \r\n    .m-tabs--left &,\r\n    .m-tabs--right & {\r\n      flex: 1;\r\n      padding: 0 0 0 16px;\r\n    }\r\n    \r\n    .m-tabs--right & {\r\n      padding: 0 16px 0 0;\r\n    }\r\n  }\r\n}\r\n\r\n// 响应式设计\r\n@media (max-width: 768px) {\r\n  .m-tabs {\r\n    &__item {\r\n      padding: 6px 12px;\r\n      font-size: 13px;\r\n    }\r\n    \r\n    &--left &__nav,\r\n    &--right &__nav {\r\n      width: 100px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    v-show=\"active\"\r\n    class=\"m-tab-pane\"\r\n    :class=\"{\r\n      'm-tab-pane--active': active,\r\n      'm-tab-pane--disabled': disabled\r\n    }\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, computed, onMounted, onUnmounted, useSlots } from 'vue'\r\n\r\n// 定义 props\r\nconst props = defineProps({\r\n  // 选项卡标题\r\n  label: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 是否禁用\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  // 选项卡名称，用于标识\r\n  name: {\r\n    type: [String, Number],\r\n    default: ''\r\n  },\r\n  // 是否可关闭\r\n  closable: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  // 是否延迟渲染\r\n  lazy: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// 获取插槽\r\nconst slots = useSlots()\r\n\r\n// 注入父组件上下文\r\nconst tabsContext = inject('tabsContext')\r\n\r\n// 计算是否激活\r\nconst active = computed(() => {\r\n  if (!tabsContext) return false\r\n  return tabsContext.activeName === (props.name || tabsContext.tabIndex)\r\n})\r\n\r\n// 组件挂载时注册到父组件\r\nonMounted(() => {\r\n  if (tabsContext) {\r\n    const tabData = {\r\n      name: props.name,\r\n      label: props.label,\r\n      disabled: props.disabled,\r\n      closable: props.closable,\r\n      $slots: slots\r\n    }\r\n    tabsContext.registerTab(tabData)\r\n  }\r\n})\r\n\r\n// 组件卸载时从父组件中移除\r\nonUnmounted(() => {\r\n  if (tabsContext) {\r\n    tabsContext.unregisterTab(props.name)\r\n  }\r\n})\r\n\r\n// 定义组件名称\r\ndefineOptions({\r\n  name: 'MTabPane'\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.m-tab-pane {\r\n  display: none;\r\n  \r\n  &--active {\r\n    display: block;\r\n  }\r\n  \r\n  &--disabled {\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n  }\r\n}\r\n</style>\r\n","/**\r\n * 样式工具函数\r\n * 用于确保组件样式完全覆盖 Element Plus\r\n */\r\n\r\n/**\r\n * 为元素添加高优先级样式类\r\n * @param {HTMLElement} element - 目标元素\r\n */\r\nexport function addOverrideClass(element) {\r\n  if (element && element.classList) {\r\n    element.classList.add('mc-ui-override');\r\n  }\r\n}\r\n\r\n/**\r\n * 为 Vue 组件实例添加覆盖样式\r\n * @param {Object} componentInstance - Vue 组件实例\r\n */\r\nexport function addComponentOverride(componentInstance) {\r\n  if (componentInstance && componentInstance.$el) {\r\n    addOverrideClass(componentInstance.$el);\r\n  }\r\n}\r\n\r\n/**\r\n * 全局应用样式覆盖\r\n * 在应用启动时调用，确保所有 Element Plus 组件都被覆盖\r\n */\r\nexport function applyGlobalOverride() {\r\n  // 为 body 添加覆盖类\r\n  if (typeof document !== 'undefined') {\r\n    document.body.classList.add('mc-ui-override');\r\n    \r\n    // 监听动态添加的 Element Plus 组件\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (node.nodeType === 1 && node.classList) {\r\n            // 为新添加的 Element Plus 组件添加覆盖类\r\n            if (node.className && typeof node.className === 'string' && node.className.includes('el-')) {\r\n              const parent = node.closest('.mc-ui-override') || node.parentElement;\r\n              if (parent && !parent.classList.contains('mc-ui-override')) {\r\n                parent.classList.add('mc-ui-override');\r\n              }\r\n            }\r\n            \r\n            // 检查子元素\r\n            const elComponents = node.querySelectorAll('[class*=\"el-\"]');\r\n            elComponents.forEach(el => {\r\n              const parent = el.closest('.mc-ui-override') || el.parentElement;\r\n              if (parent && !parent.classList.contains('mc-ui-override')) {\r\n                parent.classList.add('mc-ui-override');\r\n              }\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.body, {\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 强制刷新组件样式\r\n * @param {string} selector - CSS 选择器\r\n */\r\nexport function forceRefreshStyles(selector = '[class*=\"el-\"]') {\r\n  if (typeof document !== 'undefined') {\r\n    const elements = document.querySelectorAll(selector);\r\n    elements.forEach(el => {\r\n      const parent = el.closest('.mc-ui-override') || el.parentElement;\r\n      if (parent && !parent.classList.contains('mc-ui-override')) {\r\n        parent.classList.add('mc-ui-override');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 创建带有样式覆盖的 Element Plus 组件配置\r\n * @param {Object} componentConfig - 组件配置\r\n * @returns {Object} 增强后的组件配置\r\n */\r\nexport function createOverrideComponent(componentConfig) {\r\n  return {\r\n    ...componentConfig,\r\n    mounted() {\r\n      addOverrideClass(this.$el);\r\n      if (componentConfig.mounted) {\r\n        componentConfig.mounted.call(this);\r\n      }\r\n    },\r\n    updated() {\r\n      addOverrideClass(this.$el);\r\n      if (componentConfig.updated) {\r\n        componentConfig.updated.call(this);\r\n      }\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @mc-markets/ui - 自定义组件库\r\n * \r\n * 提供自定义组件和工具函数\r\n * 支持 Element Plus 组件回退机制\r\n * 将 Element Plus 组件前缀从 el- 转换为 m- 并导出\r\n * 导出 Element Plus 事件相关功能（Message、MessageBox、Notification、Loading 等）\r\n * \r\n * @version 1.0.75\r\n */\r\n\r\nimport * as ElementPlusComponents from 'element-plus'\r\n// 导入样式文件\r\nimport MIcon from './components/Icon/Icon.vue'\r\nimport MButton from './components/Button/Button.vue'\r\nimport MInput from './components/Input/Input.vue'\r\nimport MForm from './components/Form/Form.vue'\r\nimport MFormItem from './components/FormItem/FormItem.vue'\r\nimport MTooltip from './components/Tooltip/Tooltip.vue'\r\nimport MSelect from './components/Select/Select.vue'\r\nimport MOption from './components/Option/Option.vue'\r\nimport MOptionGroup from './components/OptionGroup/OptionGroup.vue'\r\nimport MPagination from './components/Pagination/Pagination.vue'\r\nimport MRadio from './components/Radio/Radio.vue'\r\nimport MRadioGroup from './components/RadioGroup/RadioGroup.vue'\r\nimport MRadioButton from './components/RadioButton/RadioButton.vue'\r\nimport MSwitch from './components/Switch/Switch.vue'\r\nimport MTag from './components/Tag/Tag.vue'\r\nimport MAlert from './components/Alert/Alert.vue'\r\nimport MDialog from './components/Dialog/Dialog.vue'\r\nimport MNotification from './components/Notification/Notification.vue'\r\nimport MMessage, { Message } from './components/Message/Message.vue'\r\nimport MNotifiMessage, { NotifiMessage } from './components/NotifiMessage/NotifiMessage.vue'\r\nimport MDatePicker from './components/DatePicker/DatePicker.vue'\r\nimport MEmpty from './components/Empty/Empty.vue'\r\nimport MTable from './components/Table/Table.vue'\r\nimport MTableColumn from './components/Table/TableColumn.vue'\r\nimport MBanner from './components/Banner/Banner.vue'\r\nimport MTabs from './components/Tabs/Tabs.vue'\r\nimport MTabPane from './components/Tabs/TabPane.vue'\r\n\r\nconst components = [MIcon, MButton, MInput, MForm, MFormItem, MTooltip, MSelect, MOption, MOptionGroup, MPagination, MRadio, MRadioGroup, MRadioButton, MSwitch, MTag, MAlert, MDialog, MNotification, MMessage, MNotifiMessage, MDatePicker, MEmpty, MTable, MTableColumn, MBanner, MTabs, MTabPane]\r\n\r\n// 全局组件配置 - 需要自动创建实例的组件\r\nconst globalInstanceComponents = [\r\n  { id: 'global-message-container', component: MMessage },\r\n  { id: 'global-notification-container', component: MNotifiMessage }\r\n]\r\n\r\n// 创建单个全局组件实例\r\nasync function createGlobalComponent({ id, component }) {\r\n  try {\r\n    // 检查是否已存在，避免重复创建\r\n    if (document.getElementById(id)) return\r\n    \r\n    const { createApp, h } = await import('vue')\r\n    \r\n    // 创建容器\r\n    const container = document.createElement('div')\r\n    container.id = id\r\n    document.body.appendChild(container)\r\n    \r\n    // 创建并挂载 Vue 应用\r\n    const app = createApp({\r\n      render: () => h(component)\r\n    })\r\n    \r\n    app.mount(`#${id}`)\r\n  } catch (error) {\r\n    console.warn(`Failed to create global component ${id}:`, error)\r\n  }\r\n}\r\n\r\n// 创建所有全局组件实例\r\nasync function createGlobalComponents() {\r\n  const promises = globalInstanceComponents.map(createGlobalComponent)\r\n  await Promise.all(promises)\r\n}\r\n\r\n// 存储转换后的 Element Plus 组件\r\nconst convertedComponents = {}\r\n\r\nfunction registerElementPlus(app) {\r\n  // 获取已注册的自定义组件名称\r\n  const customComponentNames = components.map(comp => {\r\n    if (comp && comp.name && typeof comp.name === 'string') {\r\n      let name = comp.name.toLowerCase()\r\n      const nameMap = {\r\n        'mradiogroup': 'm-radio-group',\r\n        'mradiobutton': 'm-radio-button',\r\n        'mformitem': 'm-form-item',\r\n        'moptiongroup': 'm-option-group',\r\n        'mtabs': 'm-tabs',\r\n        'mtabpane': 'm-tab-pane'\r\n      }\r\n      return nameMap[name] || name.replace(/^m/, 'm-')\r\n    }\r\n    return null\r\n  }).filter(Boolean)\r\n\r\n  \r\n  Object.entries(ElementPlusComponents).forEach(([key, comp]) => {\r\n    if (comp && comp.name && typeof comp.name === 'string' && comp.name.startsWith('El')) {\r\n      // 将 ElOptionGroup 转换为 m-option-group\r\n      const mName = 'm-' + comp.name.slice(2).replace(/([A-Z])/g, '-$1').toLowerCase().replace(/^-/, '')\r\n      \r\n      // 只注册没有被自定义组件覆盖的Element Plus组件\r\n      if (!customComponentNames.includes(mName)) {\r\n        // 检查组件是否已经注册，避免重复注册警告\r\n        if (!app._context.components[mName]) {\r\n          app.component(mName, comp)\r\n        } else {\r\n        }\r\n      } else {\r\n      }\r\n      \r\n      // 存储转换后的组件用于导出\r\n      const exportName = 'M' + comp.name.slice(2) // ElButton -> MButton\r\n      convertedComponents[exportName] = comp\r\n    }\r\n  })\r\n}\r\n\r\nconst install = (app) => {\r\n  // 应用全局样式覆盖\r\n  if (typeof window !== 'undefined') {\r\n    import('./utils/styleUtils.js').then(({ applyGlobalOverride }) => {\r\n      applyGlobalOverride();\r\n    });\r\n  }\r\n  \r\n  console.log('🚀 开始安装 @mc-markets/ui 组件库...')\r\n  \r\n  // 先注册自定义组件 - 确保优先级\r\n  components.forEach(component => {\r\n    if (component && component.name && typeof component.name === 'string') {\r\n      let name = component.name.toLowerCase()\r\n      // 处理特定的组件名称映射\r\n      const nameMap = {\r\n        'mradiogroup': 'm-radio-group',\r\n        'mradiobutton': 'm-radio-button',\r\n        'mformitem': 'm-form-item',\r\n        'moptiongroup': 'm-option-group',\r\n        'mtabs': 'm-tabs',\r\n        'mtabpane': 'm-tab-pane'\r\n      }\r\n      name = nameMap[name] || name.replace(/^m/, 'm-')\r\n      \r\n      // 强制注册自定义组件，确保覆盖任何已存在的组件\r\n      app.component(name, component)\r\n    }\r\n  })\r\n  \r\n  // 然后注册转换后的 Element Plus 组件（只注册没有自定义组件覆盖的）\r\n  registerElementPlus(app)\r\n  \r\n  // 自动创建全局组件实例\r\n  if (typeof window !== 'undefined') {\r\n    createGlobalComponents()\r\n  }\r\n}\r\n\r\n// 工具函数：检查组件注册状态\r\nexport function checkComponentRegistration(app) {\r\n  const registeredComponents = Object.keys(app._context.components || {})\r\n  const customComponents = components.map(comp => {\r\n    if (comp && comp.name && typeof comp.name === 'string') {\r\n      let name = comp.name.toLowerCase()\r\n      const nameMap = {\r\n        'mradiogroup': 'm-radio-group',\r\n        'mradiobutton': 'm-radio-button',\r\n        'mformitem': 'm-form-item',\r\n        'moptiongroup': 'm-option-group',\r\n        'mtabs': 'm-tabs',\r\n        'mtabpane': 'm-tab-pane'\r\n      }\r\n      return nameMap[name] || name.replace(/^m/, 'm-')\r\n    }\r\n    return null\r\n  }).filter(Boolean)\r\n  \r\n  console.log('📊 组件注册状态报告:')\r\n  console.log('已注册的组件:', registeredComponents.filter(name => name.startsWith('m-')))\r\n  console.log('自定义组件:', customComponents)\r\n  \r\n  return {\r\n    registered: registeredComponents,\r\n    custom: customComponents,\r\n    conflicts: registeredComponents.filter(name => \r\n      name.startsWith('m-') && customComponents.includes(name)\r\n    )\r\n  }\r\n}\r\n\r\nexport default { install }\r\nexport { MIcon, MButton, MInput, MForm, MFormItem, MTooltip, MSelect, MPagination, MRadio, MRadioGroup, MRadioButton, MSwitch, MTag, MAlert, MDialog, MNotification, MMessage, MNotifiMessage, MDatePicker, MEmpty, MTable, MTableColumn, MBanner, MTabs, MTabPane }\r\n\r\n// 导出样式工具函数\r\nexport { \r\n  addOverrideClass, \r\n  addComponentOverride, \r\n  applyGlobalOverride, \r\n  forceRefreshStyles,\r\n  createOverrideComponent \r\n} from './utils/styleUtils.js'\r\n\r\n// 手动导出常用的 Element Plus 函数（只导出函数，不导出组件）\r\nexport const MMessageBox = ElementPlusComponents.ElMessageBox\r\n\r\n// 导出自定义组件的静态方法\r\nexport { Message, NotifiMessage }\r\n\r\n// 导出转换后的 Element Plus 组件\r\nexport const mComponents = { ...convertedComponents }\r\n\r\n// 导出常用的 Element Plus 组件\r\nexport const MButtonGroup = convertedComponents.MButtonGroup\r\nexport const MBreadcrumb = convertedComponents.MBreadcrumb\r\nexport const MBreadcrumbItem = convertedComponents.MBreadcrumbItem\r\nexport const MCarousel = convertedComponents.MCarousel\r\nexport const MCarouselItem = convertedComponents.MCarouselItem\r\nexport const MCascader = convertedComponents.MCascader\r\nexport const MCascaderPanel = convertedComponents.MCascaderPanel\r\nexport const MCheckTag = convertedComponents.MCheckTag\r\nexport const MCalendar = convertedComponents.MCalendar\r\nexport const MTimePicker = convertedComponents.MTimePicker\r\nexport const MDateTimePicker = convertedComponents.MDateTimePicker\r\nexport const MColorPicker = convertedComponents.MColorPicker\r\nexport const MTransfer = convertedComponents.MTransfer\r\nexport const MTree = convertedComponents.MTree\r\nexport const MTreeSelect = convertedComponents.MTreeSelect\r\nexport const MUpload = convertedComponents.MUpload\r\nexport const MImage = convertedComponents.MImage\r\nexport const MImageViewer = convertedComponents.MImageViewer\r\nexport const MBacktop = convertedComponents.MBacktop\r\nexport const MInfiniteScroll = convertedComponents.MInfiniteScroll\r\nexport const MAffix = convertedComponents.MAffix\r\nexport const MScrollbar = convertedComponents.MScrollbar\r\nexport const MResult = convertedComponents.MResult\r\nexport const MSkeleton = convertedComponents.MSkeleton\r\nexport const MLoading = convertedComponents.MLoading\r\nexport const MSpinner = convertedComponents.MSpinner\r\nexport const MProgress = convertedComponents.MProgress\r\nexport const MBadge = convertedComponents.MBadge\r\nexport const MAvatar = convertedComponents.MAvatar\r\nexport const MImagePreview = convertedComponents.MImagePreview\r\nexport const MTeleport = convertedComponents.MTeleport\r\nexport const MConfigProvider = convertedComponents.MConfigProvider\r\n"],"names":["props","__props","emit","__emit","iconClass","computed","classes","iconStyle","style","handleClick","event","_openBlock","_createElementBlock","_mergeProps","_createBlock","_component_el_button","_ctx","_createSlots","_renderSlot","name","formRef","ref","useAttrs","__expose","callback","_a","prop","_component_el_form","_component_el_form_item","classNames","excludeAttrs","attrs","excludeKeys","result","__spreadValues","key","useClassName","defaultClass","excludeKey","mergedAttrs","className","popperClass","_component_el_tooltip","_unref","_component_el_select","_component_el_option","_normalizeProps","_guardReactiveProps","_component_el_option_group","_component_el_pagination","_component_el_radio","computedPopperClass","defaultPopperClass","__objRest","_component_el_radio_button","_component_el_tag","availableTypes","__default__","useCustomIcon","rest","__spreadProps","iconUrl","_component_el_alert","dialogVisible","_useModel","_createVNode","_component_el_dialog","$slots","_withCtx","close","titleId","titleClass","_sfc_main","_component_el_notification","messages","messageId","Message","options","config","existingIndex","m","id","message","index","closeMessage","_hoisted_6","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_5","_createElementVNode","_hoisted_9","_toDisplayString","$event","$setup","notifications","notificationId","NotifiMessage","closeNotification","_hoisted_2","notification","_component_el_date_picker","availableImages","image","imageUrl","_component_el_empty","_component_el_table","_component_el_table_column","slots","useSlots","internalVisible","watch","newVal","bannerStyle","defaultIcons","handleClose","_normalizeClass","_normalizeStyle","tabs","activeName","provide","tab","t","handleTabClick","__async","tabName","error","handleTabClose","handleTabAdd","_Fragment","_renderList","_withModifiers","_hoisted_7","tabsContext","inject","active","onMounted","tabData","onUnmounted","addOverrideClass","element","addComponentOverride","componentInstance","applyGlobalOverride","mutations","mutation","node","parent","el","forceRefreshStyles","selector","createOverrideComponent","componentConfig","components","MIcon","MButton","MInput","MForm","MFormItem","MTooltip","MSelect","MOption","MOptionGroup","MPagination","MRadio","MRadioGroup","MRadioButton","MSwitch","MTag","MAlert","MDialog","MNotification","MMessage","MNotifiMessage","MDatePicker","MEmpty","MTable","MTableColumn","MBanner","MTabs","MTabPane","globalInstanceComponents","createGlobalComponent","_0","component","createApp","h","container","createGlobalComponents","promises","convertedComponents","registerElementPlus","app","customComponentNames","comp","ElementPlusComponents","mName","exportName","install","styleUtils","checkComponentRegistration","registeredComponents","customComponents","MMessageBox","mComponents","MButtonGroup","MBreadcrumb","MBreadcrumbItem","MCarousel","MCarouselItem","MCascader","MCascaderPanel","MCheckTag","MCalendar","MTimePicker","MDateTimePicker","MColorPicker","MTransfer","MTree","MTreeSelect","MUpload","MImage","MImageViewer","MBacktop","MInfiniteScroll","MAffix","MScrollbar","MResult","MSkeleton","MLoading","MSpinner","MProgress","MBadge","MAvatar","MImagePreview","MTeleport","MConfigProvider"],"mappings":"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"}